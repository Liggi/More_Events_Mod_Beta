#Central system. Watching the watchmen.

#Central system
mem_regressors_central_system = {
	class = sc_black_hole
	asteroids_distance = 60
	name = "Inintard Zuul"
	
	usage = misc_system_init
	usage_odds = 1
	max_instances = 1
	
	flags = { mem_regressors_central_system }
	
	planet = {
		class = star
		orbit_distance = 0
		
		init_effect = {
			prevent_anomaly = yes
			orbital_deposit_tile = { clear_deposits = yes }
			
			create_ambient_object = {
				type = "large_debris_object"
				location = this
			}
			last_created_ambient_object = { 
				set_location = {
					target = prev
					distance = 20
					angle = 20
				}
			}
			create_ambient_object = {
				type = "large_debris_object"
				location = this
			}
			last_created_ambient_object = { 
				set_location = {
					target = prev
					distance = 20
					angle = 150
				}
			}
			create_ambient_object = {
				type = "medium_debris_01_object"
				location = this
			}
			last_created_ambient_object = { 
				set_location = {
					target = prev
					distance = 35
					angle = 90
				}
			}
			create_ambient_object = {
				type = "medium_debris_02_object"
				location = this
			}
			last_created_ambient_object = { 
				set_location = {
					target = prev
					distance = 3
					angle = 270
				}
			}
		}
	}
	
	change_orbit = 60
	
	planet = {
		count = 1
		name = "MXX-Z89"
		orbit_distance = 0
		size = 9
		class = pc_asteroid
		
		flags = { mem_regressors_asteroid }
		
		init_effect = {
			prevent_anomaly = yes
			orbital_deposit_tile = { clear_deposits = yes }
		}
	}
	
	planet = {
		count = 7
		orbit_distance = 0
		orbit_angle = { min = 35 max = 45 }
		class = pc_asteroid
		size = { min = 4 max = 6 }
	}
	
	planet = {
		count = 1
		class = pc_barren
		orbit_distance = 30
		entity = "barren_planet_01_destroyed_entity"
		
		
	}
	
	init_effect = {
		random_list = {
			85 = {  }
			1500 = {
				spawn_system = {
					min_distance = 20
					max_distance = 50
					initializer = "mem_regressor_one"
				}
				# spawn_system = {
					# min_distance = 20
					# max_distance = 50
					# initializer = "mem_regressor_two"
				# }
				# spawn_system = {
					# min_distance = 20
					# max_distance = 50
					# initializer = "mem_regressor_three"
				# }
			}
		}
	}
}

#1984
mem_regressor_one = {
	class = rl_standard_stars
	flags = { primitive_system }
	
	planet = {
		count = 1
		class = star
		orbit_distance = 0
		orbit_angle = 1
		size = { min = 20 max = 30 }
		has_ring = no
	}
	
	change_orbit = 20
	
	planet = {
		orbit_distance = 20
		count = { min = 0 max = 1 }
		size = { min = 12 max = 20 }
		class = pc_molten
		
		moon = {
			orbit_distance = 5
			count = { min = 0 max = 1 }
			size = { min = 5 max = 7 }
			class = pc_molten
		}
	}
	
	planet = {
		orbit_distance = 20
		count = { min = 0 max = 1 }
		size = { min = 12 max = 20 }
		class = pc_toxic
		
		moon = {
			orbit_distance = 5
			count = { min = 0 max = 1 }
			size = { min = 5 max = 7 }
			class = pc_barren
		}
	}
	
	planet = {
		orbit_distance = 20
		count = { min = 0 max = 1 }
		size = { min = 12 max = 20 }
		class = pc_barren
		
		moon = {
			orbit_distance = 5
			count = { min = 0 max = 1 }
			size = { min = 5 max = 7 }
			class = pc_barren_cold
		}
	}
	
	change_orbit = 20
	
	planet = {
		count = 1
		class = rl_habitable_normal
		size = 16
		
		init_effect = {
			prevent_anomaly = yes
			create_species = {
				name = random
				class = random
				portrait = random
				homeworld = THIS
				traits = {
					trait = random_traits
				}
			}
			
			create_country = {
				name = random
				authority = auth_dictatorial
				civics = {
					civic = civic_mem_war_is_peace
					civic = civic_mem_freedom_is_slavery
				}
				ethics = {
					ethic = ethic_fanatic_authoritarian
					ethic = ethic_militarist
				}
				species = last_created_species
				flag = {
					icon = random
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors = {
						"black"
						"black"
						"null"
						"null"
					}
				}
				type = primitive
			}
			last_created_country = {
				set_graphical_culture = industrial_01
				set_country_flag = mem_regressors_post_inflection
				set_country_flag = mem_regressors_dystopia
				set_primitive_age = mem_regressors_post_inflection
			}
			create_colony = {
				owner = last_created_country
				species = last_created
				ethos = owner
			}
			random_tile = {
				limit = { has_building = "building_colony_shelter" }
				remove_building = yes
			}
			every_tile = {
				limit = {
					has_blocker = yes
				}
				remove_blocker = yes
			}
			while = {
				count = 4			
				random_tile = {
					limit = {
						has_blocker = no
						has_building = no
						has_grown_pop = no
					}
					set_blocker = tb_decrepit_dwellings
				}
				random_tile = {
					limit = {
						has_blocker = no
						has_building = no
						has_grown_pop = no
					}
					set_blocker = tb_failing_infrastructure		
				}				
			}					
			while = {
				count = 8
				random_tile = {
					limit = {
						has_blocker = no
						has_grown_pop = no
						has_growing_pop = no
					}
					create_pop = {
						species = last_created
					}
				}	
			}
			while = {
				count = 4
				random_tile = {
					limit = { 
						has_blocker = no 
						has_building = no 
						has_grown_pop = yes
					}
					set_building = "building_primitive_farm"
					add_resource = {
						resource = food
						amount = 1
						replace = yes
					}						
				}					
			}
			while = {
				count = 4
				random_tile = {
					limit = { 
						has_blocker = no 
						has_building = no 
						has_grown_pop = yes
					}
					set_building = "building_primitive_factory"
					add_resource = {
						resource = minerals
						amount = 1
						replace = yes
					}						
				}					
			}
			while = {
				count = 4
				create_army = {
					name = "NAME_Industrial_Army"
					owner = last_created
					species = last_created
					type = "industrial_army"
				}
			}
		}
		
		
		
	}
	
	change_orbit = 20
	
	planet = {
		orbit_distance = 20
		count = { min = 0 max = 2 }
		class = pc_gas_giant
		size = { min = 20 max = 25 }
		
		moon = {
			orbit_distance = 5
			count = { min = 0 max = 1 }
			size = { min = 5 max = 7 }
			class = pc_barren_cold
		}
		
		moon = {
			orbit_distance = 5
			count = { min = 0 max = 1 }
			size = { min = 5 max = 7 }
			class = pc_frozen
		}
	}
}