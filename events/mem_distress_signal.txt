#################################
# Distress Signal anomalies
# Idea and writing by Malthus and ViolentBeetle
# Code by Tuttu
#################################

namespace = mem_distress_signal

@mem_stranded_influence_gain1 = 50
@mem_stranded_influence_gain2 = 100
@mem_stranded_influence_gain3 = 150
@mem_stranded_society_gain1 = 250
@mem_stranded_society_gain2 = 500
@mem_stranded_society_gain3 = 1000
@mem_crash_site_society_gain = 150
@mem_crash_site_influence_gain = 100

# TODO : Change event sounds
# TODO : Add Rock Thrashers branch when colonizing before doing special project

# Failure and Critical failure
ship_event = {
	id = mem_distress_signal.1
	title = "mem_distress_signal.1.name"
	desc = "mem_distress_signal.1.desc"
	picture =  GFX_evt_ship_in_orbit 
	show_sound = event_ship_bridge
	location = FROM

	is_triggered_only = yes

	option = {
		name = mem_distress_signal.1.a
	}
}

#################################
## STRANDED
#################################

# Stranded - Intial event
ship_event = {
	id = mem_distress_signal.100
	title = "mem_distress_signal.100.name"
	desc = "mem_distress_signal.100.desc"
	picture =  GFX_evt_mem_wreckage_shelter 
	show_sound = event_sensor_ping
	location = FROM

	is_triggered_only = yes	
	
	immediate {
		FROM = { save_event_target_as = mem_distress_signal_stranded_planet }
		set_global_flag = mem_distress_signal_stranded
	}
	
	# Available to everyone but Hive Mind and Fanatic purifiers if there's a free leader slot
	option = {
		name = mem_distress_signal.100.common.welcome
		trigger = {
			root.owner = {
				free_leader_slots > 0
				NOT = {
					has_ethic = ethic_hive_mind
					has_civic = civic_fanatic_purifiers
				}
			}		
		}
		
		custom_tooltip = mem_distress_signal.100.tooltip	
		hidden_effect = {
			create_species = {
				name = random
				class = random
				portrait = random
				traits = random
			}			
		
			owner = {
				create_leader = {
					type = scientist
					species = last_created
					name = "Bheer Gry'Ills"
					skill = 500
					traits = {
						trait = leader_trait_custom_AI_assistant
					}
				}
				
				last_created_leader = {
					save_event_target_as = mem_distress_signal_stranded_scientist
					set_leader_flag = mem_distress_signal_stranded_scientist
					random_list = {
						50 = { add_trait = leader_trait_adaptable }
						40 = { add_trait = leader_trait_roamer }
						10 = { add_trait = leader_trait_arrested_development }
					}
				}				
			}
		}
	}
	
	# Available to everyone but Hive Mind and Fanatical Purifiers if there's no free leader slot
	option = {
		name = mem_distress_signal.100.common.welcome.full
		
		trigger = {
			root.owner = {
				free_leader_slots = 0
				NOT = {
					has_ethic = ethic_hive_mind
					has_civic = civic_fanatic_purifiers
				}
			}		
		}		
		
		Root.Owner = {
			if = {
				limit = {
					NOT = { has_tech_option = tech_colonization_2 }
				}
				add_research_option = tech_colonization_2
				add_tech_progress = {
					tech = tech_colonization_2
					progress = 0.10
				}
				add_society_research = @mem_stranded_society_gain2
				else = {
					if = {
						limit = {
							has_technology = tech_colonization_2
							NOT = { has_tech_option = tech_colonization_3 }
						}
						add_research_option = tech_colonization_3
						add_tech_progress = {
							tech = tech_colonization_3
							progress = 0.10
						}
						add_society_research = @mem_stranded_society_gain2
						else = {
							if = {
								limit = {
									has_technology = tech_colonization_2
									has_technology = tech_colonization_3
									NOT = { has_tech_option = tech_colonization_4 }
								}
								add_research_option = tech_colonization_4
								add_tech_progress = {
									tech = tech_colonization_4
									progress = 0.10
								}
								add_society_research = @mem_stranded_society_gain2
								else = {
									if = {
										limit = {
											has_technology = tech_colonization_2
											has_technology = tech_colonization_3
											has_technology = tech_colonization_4
											NOT = { has_tech_option = tech_colonization_5 }
										}
										add_research_option = tech_colonization_5
										add_tech_progress = {
											tech = tech_colonization_5
											progress = 0.10
										}
										add_society_research = @mem_stranded_society_gain2
										else = { add_society_research = @mem_stranded_society_gain3 }
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	# Available only to Xenophobe but not Fanatical Purifier
	option = {
		name = mem_distress_signal.100.xenophobe.leave
		trigger = {
			root.owner = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
				NOT = { has_civic = civic_fanatic_purifiers }
			}		
		}
		hidden_effect = { ship_event = { id = mem_distress_signal.101 } }
	}
	
	# Available only to Fanatical Purifiers
	option = {
		name = mem_distress_signal.100.fanapurif
		trigger = {
			root.owner = {
				has_civic = civic_fanatic_purifiers
			}		
		}
		Root.Owner = { add_influence = @mem_stranded_influence_gain1 }
	}	
	
	# Available only to Hive Mind with "Genetic Resequencing" Tech, a free leader slot
	# And not having the Devouring Swarm Civic
	option = {
		name = mem_distress_signal.100.hive.welcome
		trigger = {
			root.owner = {
				free_leader_slots > 0
				has_ethic = ethic_hive_mind
				has_technology = tech_genetic_resequencing
				Not = { has_civic = civic_hive_devouring_swarm }
			}		
		}
		
		custom_tooltip = mem_distress_signal.100.tooltip	
		hidden_effect = {
			create_species = {
				name = random
				class = random
				portrait = random
				traits = random
			}			
		
			owner = {
				create_leader = {
					type = scientist
					species = last_created
					name = "Bheer Gry'Ills"
					skill = 500
					traits = {
						trait = leader_trait_custom_AI_assistant
						#trait = random_trait
					}
				}
				
				last_created_leader = {
					save_event_target_as = mem_distress_signal_stranded_scientist
					random_list = {
						50 = { add_trait = leader_trait_adaptable }
						40 = { add_trait = leader_trait_roamer }
						10 = { add_trait = leader_trait_arrested_development }
					}
				}				
			}
		}
	}
	
	# Available only to Hive Mind with "Genetic Resequencing" Tech without free leader slot
	# And not having the Devouring Swarm Civic
	option = {
		name = mem_distress_signal.100.hive.welcome.full
		trigger = {
			root.owner = {
				free_leader_slots = 0
				has_ethic = ethic_hive_mind
				has_techology = tech_genetic_resequencing
				Not = { has_civic = civic_hive_devouring_swarm }
			}		
		}
		Root.Owner = {			
			if = {
				limit = {
					NOT = { has_tech_option = tech_colonization_2 }
				}
				add_research_option = tech_colonization_2
				add_tech_progress = {
					tech = tech_colonization_2
					progress = 0.10
				}
				add_society_research = @mem_stranded_society_gain2
				else = {
					if = {
						limit = {
							has_technology = tech_colonization_2
							NOT = { has_tech_option = tech_colonization_3 }
						}
						add_research_option = tech_colonization_3
						add_tech_progress = {
							tech = tech_colonization_3
							progress = 0.10
						}
						add_society_research = @mem_stranded_society_gain2
						else = {
							if = {
								limit = {
									has_technology = tech_colonization_2
									has_technology = tech_colonization_3
									NOT = { has_tech_option = tech_colonization_4 }
								}
								add_research_option = tech_colonization_4
								add_tech_progress = {
									tech = tech_colonization_4
									progress = 0.10
								}
								add_society_research = @mem_stranded_society_gain2
								else = {
									if = {
										limit = {
											has_technology = tech_colonization_2
											has_technology = tech_colonization_3
											has_technology = tech_colonization_4
											NOT = { has_tech_option = tech_colonization_5 }
										}
										add_research_option = tech_colonization_5
										add_tech_progress = {
											tech = tech_colonization_5
											progress = 0.10
										}
										add_society_research = @mem_stranded_society_gain2
										else = { add_society_research = @mem_stranded_society_gain3 }
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	# Available only to Hive Mind without "Genetic Resequencing" Tech
	# And not having the Devouring Swarm Civic
	option = {
		name = mem_distress_signal.100.hive.leave
		trigger = {
			root.owner = {
				has_ethic = ethic_hive_mind
				NOT = { 
					has_technology = tech_genetic_resequencing 
					has_civic = civic_hive_devouring_swarm
				}
			}		
		}		
	}
	
	# Available only to Hive Mind with Devouring Swarm Civic
	option = {
		name = mem_distress_signal.100.hive.devouring
		trigger = {
			root.owner = {
				has_ethic = ethic_hive_mind
				has_civic = civic_hive_devouring_swarm
			}		
		}
		Root.Owner = { add_influence = @mem_stranded_influence_gain1 }
	}
}

# Stranded - "Roulette" event selector
# Also called by the end of the Xenophobe Special Project
ship_event = {
	id = mem_distress_signal.101
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		Root.Owner = { 
			hidden_effect = {
				change_variable = { 
					which = "mem_ds_stranded_survivors_story" 
					value = 1 
				}
			}
		}
		if = {
			limit = {
				Root.owner = {
					has_country_flag = mem_ds_stranded_survival1
					has_country_flag = mem_ds_stranded_survival2
					has_country_flag = mem_ds_stranded_survival3
				}
			}
			ship_event = { id = mem_distress_signal.110 days = 60 random = 10 }
			else = {
				random_list = {	
					10 = { 
						if = {
							limit ={
								NOT = { 
									Root.Owner = { 
										has_country_flag = mem_ds_stranded_survival1
									}
								}
							}							
							FROM = {
								enable_special_project = {
									name = "MEM_DISTRESS_SIGNAL_STRANDED_SURVIVOR_STORY_1_PROJECT"
									owner = ROOT
									location = event_target:mem_distress_signal_stranded_planet
								}
							}
							
							else = {
								hidden_effect = { ship_event = { id = mem_distress_signal.101 } }
							}
						}
					}
					10 = { 
						if = {
							limit ={
								NOT = { 
									Root.Owner = { 
										has_country_flag = mem_ds_stranded_survival2
									}
								}
							}
							FROM = {
								enable_special_project = {
									name = "MEM_DISTRESS_SIGNAL_STRANDED_SURVIVOR_STORY_2_PROJECT"
									owner = ROOT
									location = event_target:mem_distress_signal_stranded_planet
								}
							}
							
							else = {
								hidden_effect = { ship_event = { id = mem_distress_signal.101 } }
							}
						}
					}
					10 = { 
						if = {
							limit ={
								NOT = { 
									Root.Owner = { 
										has_country_flag = mem_ds_stranded_survival3
									}
								}
							}
							FROM = {
								enable_special_project = {
									name = "MEM_DISTRESS_SIGNAL_STRANDED_SURVIVOR_STORY_3_PROJECT"
									owner = ROOT
									location = event_target:mem_distress_signal_stranded_planet
								}
							}
							
							else = {
								hidden_effect = { ship_event = { id = mem_distress_signal.101 } }
							}
						}
					}
				}
			}
		}
	}
}

# Stranded - Survivor's story #1
ship_event = {
	id = mem_distress_signal.102
	title = "mem_distress_signal.102.name"
	desc = "mem_distress_signal.102.desc"
	picture =  GFX_evt_mem_wreckage_shelter 
	show_sound = event_sensor_ping
	location = FROM

	is_triggered_only = yes	
	
	immediate {
		Root.Owner = { 
			set_country_flag = mem_ds_stranded_survival1 
		}		
	}
		
	option = {
		trigger = {
			NOT = {
				Root.owner = {
					has_country_flag = mem_ds_stranded_survival1
					has_country_flag = mem_ds_stranded_survival2
					has_country_flag = mem_ds_stranded_survival3
				}
			}
		}
		name = mem_distress_signal.102.continue
		hidden_effect = { ship_event = { id = mem_distress_signal.101 } } 		
	}	
	
	option = {
		trigger = {
			NOT = {
				Root.owner = {
					has_country_flag = mem_ds_stranded_survival1
					has_country_flag = mem_ds_stranded_survival2
					has_country_flag = mem_ds_stranded_survival3
				}
			}
		}
		name = mem_distress_signal.102.stop
		if = {
			limit = {
				Root.Owner = {
					check_variable = {
						which = "mem_ds_stranded_survivors_story" 
						value = 1
					}				
				}
			}	
			Root.Owner = { add_society_research = @mem_stranded_society_gain1 }
			else = {
				if = {
					limit = {
						Root.Owner = {
							check_variable = {
								which = "mem_ds_stranded_survivors_story" 
								value = 2
							}				
						}				
					}	
					Root.Owner = { add_society_research = @mem_stranded_society_gain2 }
					else = {
						Root.Owner = { add_society_research = @mem_stranded_society_gain3 }
					}
				}
			}
		}
	}
	
	option = {
		trigger = {
			Root.owner = {
				has_country_flag = mem_ds_stranded_survival1
				has_country_flag = mem_ds_stranded_survival2
				has_country_flag = mem_ds_stranded_survival3
			}
		}
		name = mem_distress_signal.finalstop
		hidden_effect = { ship_event = { id = mem_distress_signal.101 } } 		
	}	
}

# Stranded - Survivor's story #2
ship_event = {
	id = mem_distress_signal.103
	title = "mem_distress_signal.103.name"
	desc = "mem_distress_signal.103.desc"
	picture =  GFX_evt_mem_wreckage_shelter 
	show_sound = event_sensor_ping
	location = FROM

	is_triggered_only = yes	
	
	immediate {
		Root.Owner = { 
			set_country_flag = mem_ds_stranded_survival2 
		}		
	}
	
	option = {
		trigger = {
			NOT = {
				Root.owner = {
					has_country_flag = mem_ds_stranded_survival1
					has_country_flag = mem_ds_stranded_survival2
					has_country_flag = mem_ds_stranded_survival3
				}
			}
		}
		name = mem_distress_signal.102.continue
		hidden_effect = { ship_event = { id = mem_distress_signal.101 } } 		
	}	
	
	option = {
		trigger = {
			NOT = {
				Root.owner = {
					has_country_flag = mem_ds_stranded_survival1
					has_country_flag = mem_ds_stranded_survival2
					has_country_flag = mem_ds_stranded_survival3
				}
			}
		}
		name = mem_distress_signal.103.stop
		if = {
			limit = {
				Root.Owner = {
					check_variable = {
						which = "mem_ds_stranded_survivors_story" 
						value = 1
					}				
				}
			}	
			Root.Owner = { add_society_research = @mem_stranded_society_gain1 }
			else = {
				if = {
					limit = {
						Root.Owner = {
							check_variable = {
								which = "mem_ds_stranded_survivors_story" 
								value = 2
							}				
						}
					}	
					Root.Owner = { add_society_research = @mem_stranded_society_gain2 }
					else = {
						Root.Owner = { add_society_research = @mem_stranded_society_gain3 }
					}
				}
			}
		}
	}
		
	option = {
		trigger = {
			Root.owner = {
				has_country_flag = mem_ds_stranded_survival1
				has_country_flag = mem_ds_stranded_survival2
				has_country_flag = mem_ds_stranded_survival3
			}
		}
		name = mem_distress_signal.finalstop
		hidden_effect = { ship_event = { id = mem_distress_signal.101 } } 		
	}	
}

# Stranded - Survivor's story #3
ship_event = {
	id = mem_distress_signal.104
	title = "mem_distress_signal.104.name"
	desc = "mem_distress_signal.104.desc"
	picture =  GFX_evt_mem_wreckage_shelter 
	show_sound = event_sensor_ping
	location = FROM

	is_triggered_only = yes	
	
	immediate {
		Root.Owner = { 
			set_country_flag = mem_ds_stranded_survival3 
		}		
	}
	
	option = {
		trigger = {
			NOT = {
				Root.owner = {
					has_country_flag = mem_ds_stranded_survival1
					has_country_flag = mem_ds_stranded_survival2
					has_country_flag = mem_ds_stranded_survival3
				}
			}
		}
		name = mem_distress_signal.102.continue
		hidden_effect = { ship_event = { id = mem_distress_signal.101 } } 		
	}	
	
	option = {
		trigger = {
			NOT = {
				Root.owner = {
					has_country_flag = mem_ds_stranded_survival1
					has_country_flag = mem_ds_stranded_survival2
					has_country_flag = mem_ds_stranded_survival3
				}
			}
		}
		name = mem_distress_signal.104.stop
		if = {
			limit = {
				Root.Owner = {
					check_variable = {
						which = "mem_ds_stranded_survivors_story" 
						value = 1
					}				
				}
			}	
			Root.Owner = { add_society_research = @mem_stranded_influence_gain1 }
			else = {
				if = {
					limit = {
						Root.Owner = {
							check_variable = {
								which = "mem_ds_stranded_survivors_story" 
								value = 2
							}				
						}
					}	
					Root.Owner = { add_society_research = @mem_stranded_influence_gain2 }
					else = {
						Root.Owner = { add_society_research = @mem_stranded_influence_gain3 }
					}
				}
			}
		}
	}
		
	option = {
		trigger = {
			Root.owner = {
				has_country_flag = mem_ds_stranded_survival1
				has_country_flag = mem_ds_stranded_survival2
				has_country_flag = mem_ds_stranded_survival3
			}
		}
		name = mem_distress_signal.finalstop
		hidden_effect = { ship_event = { id = mem_distress_signal.101 } } 		
	}	
}

# Stranded - Survivor's Death
ship_event = {
	id = mem_distress_signal.105
	title = "mem_distress_signal.105.name"
	desc = "mem_distress_signal.105.desc"
	picture =  GFX_evt_mem_wreckage_shelter 
	show_sound = event_sensor_ping
	location = FROM

	is_triggered_only = yes	
	
	option = {
		name = mem_distress_signal.105.a
	}		
}

# Stranded - Survivor is a star
ship_event = {
	id = mem_distress_signal.110
	title = "mem_distress_signal.110.name"
	desc = "mem_distress_signal.110.desc"
	picture =  GFX_evt_news_room 
	show_sound = event_sensor_ping
	location = FROM

	is_triggered_only = yes		
	
	option = {
		trigger = {
			Root.Owner = { free_leader_slots > 0 }
		}
		name = mem_distress_signal.110.accept
		custom_tooltip = mem_distress_signal.100.tooltip	
		hidden_effect = {
			create_species = {
				name = random
				class = random
				portrait = random
				traits = random
			}			
		
			owner = {
				create_leader = {
					type = governor
					species = last_created
					name = "Bheer Gry'Ills"
					skill = 500
					traits = {
						trait = leader_trait_agrarian_upbringing 
						trait = leader_trait_resilient 
					}
				}
				
				last_created_leader = {
					save_event_target_as = mem_distress_signal_stranded_governor
				}				
			}
		}
	}
	
	option = {
		trigger = {
			Root.Owner = { free_leader_slots = 0 }
		}
		name = mem_distress_signal.110.accept.full
		Root.Owner = { add_influence = @mem_stranded_influence_gain3
		}
	}

	option = {
		name = mem_distress_signal.110.deny		
	}
}

#################################
## ROCK THRASHERS
#################################

# Rock Thrashers - Initial event
# Used event_target : mem_distress_signal_rock_thrashers_planet --> Planet where anomaly spawned
ship_event = {
	id = mem_distress_signal.200
	title = "mem_distress_signal.200.name"
	desc = "mem_distress_signal.200.desc"
	picture =  GFX_evt_mem_strange_tectonics 
	show_sound = event_sensor_ping
	location = FROM

	is_triggered_only = yes	

	immediate = {
		FROM = {
			save_event_target_as = mem_distress_signal_rock_thrashers_planet
			set_planet_flag = mem_distress_signal_rock_thrashers_planet
		}
	}
	
	option = {
		name = mem_distress_signal.200.a		
		FROM = {
			set_planet_flag = mem_distress_signal_rock_thrashers_discovery_sp_not_completed
			enable_special_project = {
				name = "MEM_DISTRESS_SIGNAL_ROCK_THRASHERS_DISCOVERY_PROJECT"
				owner = ROOT
				location = FROM
			}			
		}
	}
	
	option = {
		name = mem_distress_signal.200.b
		Rood.Owner = { add_influence = 50 }
	}
	
	option = {
		name = mem_distress_signal.200.c
		trigger = {
			FROM = {
				has_planet_flag = mem_distress_signal_rock_thrashers_discovery_sp_not_completed
			}
		}
		FROM = {
			set_planet_flag = mem_distress_signal_rock_thrashers_discovery_sp_refused
		}
	}
}

# Rock Thrashers - Initial Special Project success
ship_event = {
	id = mem_distress_signal.201
	title = "mem_distress_signal.201.name"
	desc = "mem_distress_signal.201.desc"
	picture =  GFX_evt_mem_strange_tectonics 
	show_sound = event_sensor_ping
	location = event_target:mem_distress_signal_rock_thrashers_planet

	is_triggered_only = yes	

	option = {
		name = mem_distress_signal.201.a.neutral
		trigger = {
			root.owner = {
				NOR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		event_target:mem_distress_signal_rock_thrashers_planet = {
			add_modifier = {
				modifier = mem_distress_signal_rock_thrashers
				days = -1
			}			
			remove_planet_flag = mem_distress_signal_rock_thrashers_discovery_sp_not_completed
		}
	}

	option = {
		name = mem_distress_signal.201.a.xenophile
		trigger = { 
			root.owner = {
				OR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}
			}
		}
		event_target:mem_distress_signal_rock_thrashers_planet = {
			add_modifier = {
				modifier = mem_distress_signal_rock_thrashers
				days = -1
			}
			remove_planet_flag = mem_distress_signal_rock_thrashers_discovery_sp_not_completed
		}
	}
	
	option = {
		name = mem_distress_signal.201.a.xenophobe
		trigger = {
			root.owner = {
				OR = {				
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}
			}
		}
		event_target:mem_distress_signal_rock_thrashers_planet = {
			add_modifier = {
				modifier = mem_distress_signal_rock_thrashers
				days = -1
			}
			remove_planet_flag = mem_distress_signal_rock_thrashers_discovery_sp_not_completed
		}
	}
}

# Rock Thrashers - After colonization if the initial special project hasn't been completed
ship_event = {
	id = mem_distress_signal.210
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		event_target:mem_distress_signal_rock_thrashers_planet = {
			has_planet_flag = mem_distress_signal_rock_thrashers_discovery_sp_not_completed
		}
	}
	planet_event = { id = mem_distress_signal.200 days = 30 }
}

#################################
## DEBUG
#################################
country_event = {
	id = mem_distress_signal.1000
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		ROOT = {
			country_add_ethic = "ethic_xenophobe"
		}
	}
}

country_event = {
	id = mem_distress_signal.1001
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		ROOT = {
			remove_country_flag = mem_ds_stranded_survival1
			remove_country_flag = mem_ds_stranded_survival2
			remove_country_flag = mem_ds_stranded_survival3
		}
		remove_global_flag = mem_distress_signal_stranded
	}
}

country_event = {
	id = mem_distress_signal.1002
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			create_species = {
				name = random
				class = random
				portrait = random
				traits = random
			}			
					
			create_leader = {
				type = governor
				species = last_created
				name = "Bheer Gry'Ills"
				skill = 500
				traits = {
					trait = leader_trait_custom_AI_assistant
					#trait = random_trait
				}
			}
			
			last_created_leader = {
				save_event_target_as = mem_distress_signal_stranded_governor
				random_list = {
					50 = { add_trait = leader_trait_adaptable }
					40 = { add_trait = leader_trait_roamer }
					10 = { add_trait = leader_trait_arrested_development }
				}
			}							
		}
	}
}