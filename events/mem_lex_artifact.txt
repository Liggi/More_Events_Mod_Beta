namespace = mem_artifact

#Shroudborn abilities

country_event = {
	id = mem_artifact.0
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			is_ship_size = mem_artifact_shroudborn
		}
	}
	
	immediate = {
		FROMFROM = {
			random_list = {
				50 = {
				}
				50 = {
					add_modifier = {
						modifier = "mem_artifact_shroudborn_power"
						days = 90
					}
				}
			}
			if = {
				limit = {
					has_modifier = mem_artifact_shroudborn_power
				}
				random_list = {
					75 = {
					}
					25 = {
						remove_modifier = "mem_artifact_shroudborn_power"
						add_modifier = {
							modifier = "mem_artifact_shroudborn_bonus"
							days = 30
						}
						repair_ship = yes
					}
				}
			}
		}
	}
}

#Shroudtech ship abilities

country_event = {
	id = mem_artifact.1
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = {
			OR = {
				is_ship_size = mem_artifact_station
				is_ship_size = mem_artifact_ship
			}
		}
	}
	
	immediate = {
		FROMFROMFROM = {
			if = {
				limit = {
					exists = this
				}
				save_event_target_as = mem_artifact_bomb_loc
				else = {
					FROMFROM = {
						save_event_target_as = mem_artifact_bomb_loc
					}
				}
			}
		}
		FROMFROM = {
			save_event_target_as = mem_artifact_ship_loc
			owner = {
				save_event_target_as = mem_artifact_ship_owner
			}
			random_list = {
				20 = {
					add_modifier = {
						modifier = "mem_artifact_ship_power_1"
						days = 90
					}
				}
				20 = {
					add_modifier = {
						modifier = "mem_artifact_ship_power_2"
						days = 90
					}
				}
				20 = {
					add_modifier = {
						modifier = "mem_artifact_ship_power_3"
						days = 90
					}
				}
				20 = {
					add_modifier = {
						modifier = "mem_artifact_ship_power_4"
						days = 90
					}
				}
				20 = {
					add_modifier = {
						modifier = "mem_artifact_ship_power_5"
						days = 90
					}
				}
			}
			if = {
				limit = {
					has_modifier = mem_artifact_ship_power_1
				}
				random_list = {
					50 = {
					}
					50 = {
						remove_modifier = "mem_artifact_ship_power_1"
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no
								is_boss = yes
							}
							effect = {
								set_owner = event_target:mem_artifact_ship_owner
								create_ship = {
									name = "Vic'Inta"
									design = "Av'Rta I"
									prefix = no
								}
								set_location = event_target:mem_artifact_ship_loc
								set_fleet_stance = aggressive
								set_aggro_range = 500
								set_aggro_range_measure_from = self
								
								fleet_event = { id = mem_artifact.2 days = 60 }
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_modifier = mem_artifact_ship_power_2
				}
				random_list = {
					50 = {
					}
					50 = {
						remove_modifier = "mem_artifact_ship_power_2"
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no
								is_boss = yes
							}
							effect = {
								set_owner = event_target:mem_artifact_ship_owner
								create_ship = {
									name = "Prat'Ibha"
									design = "Av'Rta II"
									prefix = no
								}
								set_location = event_target:mem_artifact_ship_loc
								
								set_fleet_stance = aggressive
								set_aggro_range = 500
								set_aggro_range_measure_from = self
								
								fleet_event = { id = mem_artifact.2 days = 60 }
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_modifier = mem_artifact_ship_power_3
				}
				random_list = {
					50 = {
					}
					50 = {
						remove_modifier = "mem_artifact_ship_power_3"
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no 
								is_boss = yes
							}
							effect = {
								set_owner = event_target:mem_artifact_ship_owner
								create_ship = {
									name = "Zun'Yata"
									design = "Nir'Rti I"
									prefix = no
								}
								set_location = event_target:mem_artifact_bomb_loc

								fleet_event = { id = mem_artifact.2 days = 1 }
								
								set_event_locked = yes
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_modifier = mem_artifact_ship_power_4
				}
				random_list = {
					50 = {
					}
					50 = {
						remove_modifier = "mem_artifact_ship_power_4"
						create_fleet = {
							name = "Psionic Projection"
							settings = {
								spawn_debris = no 
								is_boss = yes
							}
							effect = {
								set_owner = event_target:mem_artifact_ship_owner
								create_ship = {
									name = "Val'Ukatva"
									design = "Nir'Rti II"
									prefix = no
								}
								set_location = event_target:mem_artifact_bomb_loc

								fleet_event = { id = mem_artifact.2 days = 1 }
								
								set_event_locked = yes
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_modifier = mem_artifact_ship_power_5
				}
				random_list = {
					50 = {
					}
					50 = {
						remove_modifier = "mem_artifact_ship_power_5"
						add_modifier = {
							modifier = "mem_artifact_ship_repair"
							days = 30
						}
						repair_ship = yes
					}
				}
			}
		}
	}
}

#Disband Drones

fleet_event = {
	id = mem_artifact.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		destroy_fleet = THIS
	}
}

#Player System Buster Type 2

country_event = {
	id = mem_artifact.3
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROMFROM = {
			is_ship_size = mem_artifact_bomb_2
		}
	}
	
	immediate = {
		FROMFROMFROM = {
			OWNER = {
				save_event_target_as = mem_artifact_bomb_2_owner
			}
		}
		FROMFROM = {
			solar_system = {
				if = {
					limit = {
						space_owner = {
							exists = this
							OR = {
								is_country_type = default
								is_country_type = fallen_empire
								is_country_type = awakened_fallen_empire
							}
							NOT = {
								is_country = event_target:mem_artifact_bomb_2_owner
							}
						}
					}
					space_owner = {
						add_opinion_modifier = { who = event_target:mem_artifact_bomb_2_owner modifier = mem_artifact_bomb_2_victim }
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes 
					}
					save_event_target_as = mem_artifact_bomb_2_loc
					mem_effect_explosion_AOE = yes
					create_ambient_object = {
					type = "mem_cloud_ambient_object"
					location = this
					duration = 1800
					}
					planet_event = { id = mem_artifact.400 days = 5 }
				}
				every_system_planet = {
					if = {
						limit = {
							exists = this
							is_star = no 
						}
						if = {
							limit = {
								OR = {
									habitable_planet = yes
									habitable_structure = yes
								}
								NOT = {
									has_modifier = mem_artifact_bomb_2_planet_effect
								}
							}
							add_modifier = {
								modifier = "mem_artifact_bomb_2_planet_effect"
								days = 1800
							}
						}
						if = {
							limit = {
								has_army = yes
							}
							while = {
								limit = {
									has_army = yes
								}
								random_planet_army = {
									remove_army = yes
								}
							}
						}
						every_tile = {
							if = {
								limit = {
									OR = {
										has_grown_pop = yes
										has_growing_pop = yes
									}
								}
								kill_pop = yes
							}
							if = {
								limit = {
									has_building = yes
									is_ruined = no
								}
								set_ruined = yes
							}
						}
					}
				}
				set_timed_star_flag = { flag = mem_artifact_bomb_2_debuff days = 1800 }
			}
		}
		create_fleet = {
			name = "Psionic Projection"
			settings = {
				spawn_debris = no 
				is_boss = yes
			}
			effect = {
				set_owner = event_target:mem_artifact_bomb_2_owner
				create_ship = {
					name = "Ab'Hu"
					design = "Nir'Rti III"
					prefix = no
				}
				set_location = event_target:mem_artifact_bomb_2_loc

				fleet_event = { id = mem_artifact.8 days = 1 }
				
				set_event_locked = yes
			}
		}
		every_country = {
			limit = {
				has_communications = event_target:mem_artifact_bomb_2_owner
				NOT = {
					is_country = event_target:mem_artifact_bomb_2_owner
					has_ai_personality_behaviour = purger
				}
				OR = {
					is_country_type = default
					has_ai_personality = awakened_fallen_empire_xenophile				
				}	
			}
			add_opinion_modifier = { who = event_target:mem_artifact_bomb_2_owner modifier = opinion_genocidal }
		}
		add_threat = {
			who = event_target:mem_artifact_bomb_2_owner
			amount = 10
		}
	}
}

#Player System Buster Type 1

country_event = {
	id = mem_artifact.4
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROMFROMFROM = {
			is_ship_size = mem_artifact_bomb_1
		}
	}
	
	immediate = {
		FROMFROMFROM = {
			OWNER = {
				save_event_target_as = mem_artifact_bomb_1_owner
			}
		}
		FROMFROM = {
			solar_system = {
				if = {
					limit = {
						space_owner = {
							exists = this
							OR = {
								is_country_type = default
								is_country_type = fallen_empire
								is_country_type = awakened_fallen_empire
							}
							NOT = {
								is_country = event_target:mem_artifact_bomb_1_owner
							}
						}
					}
					space_owner = {
						add_opinion_modifier = { who = event_target:mem_artifact_bomb_1_owner modifier = mem_artifact_bomb_1_victim }
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes 
					}
					save_event_target_as = mem_artifact_bomb_1_loc
					mem_effect_explosion_AOE = yes
					last_created_ambient_object = {
						set_ambient_object_flag = mem_artifact_bomb_1_explosion_ambient
					}
					create_ambient_object = {
					type = "mem_cloud_ambient_object"
					duration = 1800
					location = this
					}
					last_created_ambient_object = {
						set_ambient_object_flag = mem_artifact_bomb_1_fog_1
					}
					create_ambient_object = {
					type = "mem_cloud_ambient_alt_object"
					duration = 1800
					location = this
					}
					last_created_ambient_object = {
						set_ambient_object_flag = mem_artifact_bomb_1_fog_2
					}
					if = {
						limit = {
							NOT = {
								is_planet_class = pc_mem_star_dummy
							}
						}
						prevent_anomaly = yes
						orbital_deposit_tile = {
							clear_deposits = yes
						}
						change_pc = pc_mem_star_dummy
					}
					planet_event = { id = mem_artifact.400 days = 5 }
				}
				every_system_planet = {
					if = {
						limit = {
							exists = this
							is_star = no
						}
						if = {
							limit = {
								has_army = yes
							}
							while = {
								limit = {
									has_army = yes
								}
								random_planet_army = {
									remove_army = yes
								}
							}
						}
						every_tile = {
							if = {
								limit = {
									OR = {
										has_grown_pop = yes
										has_growing_pop = yes
									}
								}
								kill_pop = yes
							}
						}
						remove_planet = yes 
					}
				}
				every_system_ambient_object = {
					if = {
						limit = {
							exists = this
							NOR = {
								has_ambient_object_flag = mem_artifact_bomb_1_fog_1
								has_ambient_object_flag = mem_artifact_bomb_1_fog_2
								has_ambient_object_flag = mem_artifact_bomb_1_explosion_ambient
							}
						}
						destroy_ambient_object = this
					}
				}
				set_timed_star_flag = { flag = mem_artifact_bomb_1_debuff days = 1800 }
			}
		}
		create_fleet = {
			name = "Psionic Projection"
			settings = {
				spawn_debris = no 
				is_boss = yes
			}
			effect = {
				set_owner = event_target:mem_artifact_bomb_1_owner
				create_ship = {
					name = "Va'Zin"
					design = "Nir'Rti IV"
					prefix = no
				}
				set_location = event_target:mem_artifact_bomb_1_loc

				fleet_event = { id = mem_artifact.7 days = 1 }
				
				set_event_locked = yes
			}
		}
		every_country = {
			limit = {
				has_communications = event_target:mem_artifact_bomb_1_owner
				NOT = {
					is_country = event_target:mem_artifact_bomb_1_owner
					has_ai_personality_behaviour = purger
				}
				OR = {
					is_country_type = default
					has_ai_personality = awakened_fallen_empire_xenophile				
				}	
			}
			add_opinion_modifier = { who = event_target:mem_artifact_bomb_1_owner modifier = opinion_genocidal }
		}
		add_threat = {
			who = event_target:mem_artifact_bomb_1_owner
			amount = 10
		}
	}
}

#Player System Buster Type 2 - Debuff

event = {
	id = mem_artifact.5
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_system = {
			has_star_flag = mem_artifact_bomb_2_debuff
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_artifact_bomb_2_debuff
			}
			every_fleet_in_system = {
				if = {
					limit = {
						exists = this
						NOT = {
							owner = {
								is_country_type = shroud_spirits
							}
						}
					}
					add_modifier = {
						modifier = "mem_artifact_bomb_2_debuff_effect"
						days = 30
					}
				}
			}
		}
	}
}

#Player System Buster Type 1 - Debuff

event = {
	id = mem_artifact.6
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_system = {
			has_star_flag = mem_artifact_bomb_1_debuff
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_artifact_bomb_1_debuff
			}
			every_fleet_in_system = {
				if = {
					limit = {
						exists = this
						NOT = {
							owner = {
								is_country_type = shroud_spirits
							}
						}
					}
					add_modifier = {
						modifier = "mem_artifact_bomb_1_debuff_effect"
						days = 30
					}
				}
			}
		}
	}
}

#Player System Buster Type 1 - Surviving ships get crippled

fleet_event = {
	id = mem_artifact.7
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		destroy_fleet = THIS
		solar_system = {
			every_fleet_in_system = {
				if = {
					limit = {
						exists = this
					}
					add_modifier = {
						modifier = "mem_artifact_bomb_1_temp"
						days = 1800
					}
				}
			}
		}
	}
}

#Player System Buster Type 2 - Surviving ships get crippled

fleet_event = {
	id = mem_artifact.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		destroy_fleet = THIS
		solar_system = {
			every_fleet_in_system = {
				if = {
					limit = {
						exists = this
					}
					add_modifier = {
						modifier = "mem_artifact_bomb_2_temp"
						days = 1800
					}
				}
			}
		}
	}
}

# Beautiful Erasure - End of Days

planet_event = {
	id = mem_artifact.9
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = {
					exists = event_target:mem_beautiful_erasure_country
				} 
			}
			create_country = {
				name = "Beautiful Erasure"
				type = mem_shroud_guardian
				flag = {
					icon = {
						category = "blocky"
						file = "flag_blocky_11.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"dark_purple"
						"dark_purple"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				save_global_event_target_as = mem_beautiful_erasure_country
			}
			every_country = {
				if = {
					limit = {
						NOT = {
							has_communications = event_target:mem_beautiful_erasure_country
						}
					}
					establish_communications_no_message = event_target:mem_beautiful_erasure_country
				}
			}
		}
		solar_system = {
			random_system_planet = {
				limit = {
					is_star = yes 
				}
				save_event_target_as = mem_artifact_bomb_0_loc
				mem_effect_explosion_AOE = yes
				last_created_ambient_object = {
					set_ambient_object_flag = mem_artifact_doom_ambient
				}
				create_ambient_object = {
				type = "mem_cloud_ambient_object"
				location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = mem_artifact_doom_fog_1
				}
				create_ambient_object = {
				type = "mem_cloud_ambient_alt_object"
				location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = mem_artifact_doom_fog_2
				}
				if = {
					limit = {
						NOT = {
							is_planet_class = pc_mem_star_dummy
						}
					}
					prevent_anomaly = yes
					orbital_deposit_tile = {
						clear_deposits = yes
					}
					change_pc = pc_mem_star_dummy
				}
				planet_event = { id = mem_artifact.400 days = 5 }
			}
			every_system_planet = {
				if = {
					limit = {
						exists = this
						is_star = no
					}
					if = {
						limit = {
							has_army = yes
						}
						while = {
							limit = {
								has_army = yes
							}
							random_planet_army = {
								remove_army = yes
							}
						}
					}
					every_tile = {
						if = {
							limit = {
								OR = {
									has_grown_pop = yes
									has_growing_pop = yes
								}
							}
							kill_pop = yes
						}
					}
					remove_planet = yes 
				}
			}
			every_system_ambient_object = {
				if = {
					limit = {
						exists = this
						NOR = {
							has_ambient_object_flag = mem_artifact_doom_ambient
							has_ambient_object_flag = mem_artifact_doom_fog_1
							has_ambient_object_flag = mem_artifact_doom_fog_2
						}
					}
					destroy_ambient_object = this
				}
			}
			create_fleet = {
			name = "Psionic Projection"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:mem_beautiful_erasure_country
					create_ship = {
						name = "San'Atana"
						design = "Nir'Rti V"
						prefix = no
					}
					set_location = event_target:mem_artifact_bomb_0_loc

					fleet_event = { id = mem_artifact.7 days = 1 }
					
					set_event_locked = yes
				}
			}
			set_star_flag = mem_artifact_doom_flag
			random_system = {
				limit = {
					NOR = {
						has_star_flag = mem_artifact_doom_flag
						any_ship_in_system = {
							is_ship_size = mem_artifact_cipher_alt
						}
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					planet_event = { id = mem_artifact.9 days = 10 }
				}
			}
		}
	}
}

# Cipher 1 Power

country_event = {
	id = mem_artifact.10
	hide_window = yes
	
	trigger = {
		NOT = {
			has_modifier = mem_cipher_1_power
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = mem_artifact_cipher_1
				is_ship_size = mem_artifact_cipher
			}
		}
	}
	
	immediate = {
		add_modifier = {
			modifier = mem_cipher_1_power
			days = -1
		}
	}
}

# Cipher 2 Power

country_event = {
	id = mem_artifact.11
	hide_window = yes
	
	trigger = {
		NOT = {
			has_modifier = mem_cipher_2_power
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = mem_artifact_cipher_2
				is_ship_size = mem_artifact_cipher
			}
		}
	}
	
	immediate = {
		add_modifier = {
			modifier = mem_cipher_2_power
			days = -1
		}
	}
}

# Cipher 3 Power

country_event = {
	id = mem_artifact.12
	hide_window = yes
	
	trigger = {
		NOT = {
			has_modifier = mem_cipher_3_power
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = mem_artifact_cipher_3
				is_ship_size = mem_artifact_cipher
			}
		}
	}
	
	immediate = {
		add_modifier = {
			modifier = mem_cipher_3_power
			days = -1
		}
	}
}

# Full Cipher Power

country_event = {
	id = mem_artifact.13
	hide_window = yes
	
	trigger = {
		NOT = {
			has_modifier = mem_cipher_full_power
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = mem_artifact_cipher_4
				is_ship_size = mem_artifact_cipher_alt
			}
		}
	}
	
	immediate = {
		add_modifier = {
			modifier = mem_cipher_full_power
			days = -1
		}
	}
}

# Cipher 1 Lost

country_event = {
	id = mem_artifact.14
	hide_window = yes
	
	trigger = {
		has_modifier = mem_cipher_1_power
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = mem_artifact_cipher_1
					is_ship_size = mem_artifact_cipher
				}
			}
		}
	}
	
	immediate = {
		remove_modifier = mem_cipher_1_power
	}
}

# Cipher 2 Lost

country_event = {
	id = mem_artifact.15
	hide_window = yes
	
	trigger = {
		has_modifier = mem_cipher_2_power
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = mem_artifact_cipher_2
					is_ship_size = mem_artifact_cipher
				}
			}
		}
	}
	
	immediate = {
		remove_modifier = mem_cipher_2_power
	}
}

# Cipher 3 Lost

country_event = {
	id = mem_artifact.16
	hide_window = yes
	
	trigger = {
		has_modifier = mem_cipher_3_power
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = mem_artifact_cipher_3
					is_ship_size = mem_artifact_cipher
				}
			}
		}
	}
	
	immediate = {
		remove_modifier = mem_cipher_3_power
	}
}

# Cipher 4 Lost

country_event = {
	id = mem_artifact.17
	hide_window = yes
	
	trigger = {
		has_modifier = mem_cipher_full_power
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = mem_artifact_cipher_4
					is_ship_size = mem_artifact_cipher_alt
				}
			}
		}
	}
	
	immediate = {
		remove_modifier = mem_cipher_full_power
	}
}

# Cipher 1 Activated

ship_event = {
	id = mem_artifact.18
	hide_window = yes
	
	fire_only_once = yes
	
	mean_time_to_happen = {
		days = 30
	}
	
	trigger ={
		AND = {
			is_ship_size = mem_artifact_cipher
			OR = {
				has_ship_flag = mem_artifact_cipher_1
				has_ship_flag = mem_artifact_cipher_1_locked
			}
		}
		solar_system = {
			AND = {
				any_ship_in_system = {
					AND = {
						exists = this
						is_ship_size = mem_artifact_cipher
						OR = {
							has_ship_flag = mem_artifact_cipher_1
							has_ship_flag = mem_artifact_cipher_1_locked
						}
					}
				}
				has_star_flag = mem_gate_system
			}
		}
		NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
			has_global_flag = Cipher_1_activation
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = mem_artifact_cipher_1_former_owner
		}
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			random_system_planet = {
				limit = {
					has_planet_flag = mem_gate_stone_1
				}
				mem_effect_explosion_small_1 = yes
				create_ambient_object = {
				type = "mem_artifact_cipher_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_cipher_1_ambient
				}
			}
		}
		if = {
			limit = {
				has_ship_flag = mem_artifact_cipher_1
			}
			set_global_flag = Cipher_1_activation
			else = {
				owner = {
					if = {
						limit = {
							NOT = {
								has_country_flag = mem_artifact_forceful_access_toggle
							}
						}
						set_country_flag = mem_artifact_forceful_access_toggle
					}
				}
				set_global_flag = Cipher_1_false_activation
			}
		}
		fleet = {
			delete_fleet = this
		}
	}
}

# Cipher 2 Activated

ship_event = {
	id = mem_artifact.19
	hide_window = yes
	
	fire_only_once = yes
	
	mean_time_to_happen = {
		days = 30
	}
	
	trigger ={
		AND = {
			is_ship_size = mem_artifact_cipher
			OR = {
				has_ship_flag = mem_artifact_cipher_2
				has_ship_flag = mem_artifact_cipher_2_locked
			}
		}
		solar_system = {
			AND = {
				any_ship_in_system = {
					AND = {
						exists = this
						is_ship_size = mem_artifact_cipher
						OR = {
							has_ship_flag = mem_artifact_cipher_2
							has_ship_flag = mem_artifact_cipher_2_locked
						}
					}
				}
				has_star_flag = mem_gate_system
			}
		}
		NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
			has_global_flag = Cipher_2_activation
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = mem_artifact_cipher_2_former_owner
		}
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			random_system_planet = {
				limit = {
					has_planet_flag = mem_gate_stone_2
				}
				mem_effect_explosion_small_1 = yes
				create_ambient_object = {
				type = "mem_artifact_cipher_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_cipher_2_ambient
				}
			}
		}
		if = {
			limit = {
				has_ship_flag = mem_artifact_cipher_2
			}
			set_global_flag = Cipher_2_activation
			else = {
				owner = {
					if = {
						limit = {
							NOT = {
								has_country_flag = mem_artifact_forceful_access_toggle
							}
						}
						set_country_flag = mem_artifact_forceful_access_toggle
					}
				}
				set_global_flag = Cipher_2_false_activation
			}
		}
		fleet = {
			delete_fleet = this
		}
	}
}

# Cipher 3 Activated

ship_event = {
	id = mem_artifact.20
	hide_window = yes
	
	fire_only_once = yes
	
	mean_time_to_happen = {
		days = 30
	}
	
	trigger ={
		AND = {
			is_ship_size = mem_artifact_cipher
			OR = {
				has_ship_flag = mem_artifact_cipher_3
				has_ship_flag = mem_artifact_cipher_3_locked
			}
		}
		solar_system = {
			AND = {
				any_ship_in_system = {
					AND = {
						exists = this
						is_ship_size = mem_artifact_cipher
						OR = {
							has_ship_flag = mem_artifact_cipher_3
							has_ship_flag = mem_artifact_cipher_3_locked
						}
					}
				}
				has_star_flag = mem_gate_system
			}
		}
		NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
			has_global_flag = Cipher_3_activation
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = mem_artifact_cipher_3_former_owner
		}
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			random_system_planet = {
				limit = {
					has_planet_flag = mem_gate_stone_3
				}
				mem_effect_explosion_small_1 = yes
				create_ambient_object = {
				type = "mem_artifact_cipher_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_cipher_3_ambient
				}
			}
		}
		if = {
			limit = {
				has_ship_flag = mem_artifact_cipher_3
			}
			set_global_flag = Cipher_3_activation
			else = {
				owner = {
					if = {
						limit = {
							NOT = {
								has_country_flag = mem_artifact_forceful_access_toggle
							}
						}
						set_country_flag = mem_artifact_forceful_access_toggle
					}
				}
				set_global_flag = Cipher_3_false_activation
			}
		}
		fleet = {
			delete_fleet = this
		}
	}
}

# Relic Activation

country_event = {
	id = mem_artifact.21
	hide_window = yes
	
	fire_only_once = yes
	
	trigger = {
		NOR = {
			has_global_flag = mem_artifact_awakening 
			has_global_flag = mem_artifact_activation
		}
		AND = {
			OR = {
				has_global_flag = Cipher_1_activation
				has_global_flag = Cipher_1_false_activation
			}
			OR = {
				has_global_flag = Cipher_2_activation
				has_global_flag = Cipher_2_false_activation
			}
			OR = {
				has_global_flag = Cipher_3_activation
				has_global_flag = Cipher_3_false_activation
			}
		}
	}
	
	mean_time_to_happen = {
		days = 60
	}
	
	immediate = {
		every_country = {
			if = {
				limit = {
					has_event_chain = "mem_artifact_cipher_chain"
				}
				end_event_chain = "mem_artifact_cipher_chain"
			}
			if = {
				limit = {
					has_special_project = MEM_GATE_EXPLORE
				}
				abort_special_project = {
					type = "MEM_GATE_EXPLORE"
				}
			}
			if = {
				limit = {
					has_special_project = MEM_RELIC_ACCESS
				}
				abort_special_project = {
					type = "MEM_RELIC_ACCESS"
				}
			}
			if = {
				limit = {
					OR = {
						has_country_flag = mem_artifact_cipher_1_former_owner
						has_country_flag = mem_artifact_cipher_2_former_owner
						has_country_flag = mem_artifact_cipher_3_former_owner
					}
				}
				country_event = { id = mem_artifact.27 }
			}
		}
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_relic_alt_target
				}
				create_ambient_object = {
				type = "mem_artifact_relic_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_relic_alt_2_target
				}
				destroy_ambient_object = this
			}
		}
		
		if = {
			limit = {
				AND = {
					has_global_flag = Cipher_1_activation
					has_global_flag = Cipher_2_activation
					has_global_flag = Cipher_3_activation
				}
			}
			set_global_flag = mem_artifact_activation
			country_event = { id = mem_artifact.22 days = 60 }
			else = {
				set_global_flag = mem_artifact_awakening
				country_event = { id = mem_artifact.54 days = 60 }
			}
		}
		
	}
}

# Relic Activation - Thunderstorm

country_event = {
	id = mem_artifact.22
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = mem_artifact_activation
		NOT = {
			has_global_flag = mem_artifact_awakening 
		}
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_relic_alt_target
				}
				create_ambient_object = {
				type = "mem_artifact_relic_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_relic_alt_2_target
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_cipher_1_ambient
				}
				create_ambient_object = {
				type = "mem_artifact_cipher_ambient_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_cipher_1_ambient_alt
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_cipher_2_ambient
				}
				create_ambient_object = {
				type = "mem_artifact_cipher_ambient_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_cipher_2_ambient_alt
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_cipher_3_ambient
				}
				create_ambient_object = {
				type = "mem_artifact_cipher_ambient_object"
				scale = 5
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_cipher_3_ambient_alt
				}
				destroy_ambient_object = this
			}
			create_ambient_object = {
			type = "mem_cloud_ambient_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:mem_artifact_relic_loc
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = mem_gate_system_storm
			}
			set_star_flag = mem_gate_system_storm_debuff
		}
		country_event = { id = mem_artifact.62 days = 60 }
	}
}

#Cipher Auto Repair

ship_event = {
	id = mem_artifact.23
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_ship_size = mem_artifact_cipher
			is_ship_size = mem_artifact_cipher_alt
		}
	}
	
	immediate = {
		this = {
			mem_effect_explosion_small_1 = yes
		}
		owner = {
			capital_scope = {
				save_event_target_as = mem_artifact_cipher_escape
			}
		}
		set_disabled = no
		repair_ship = yes
		if = {
			limit = {
				NOT = {
					has_modifier = mem_artifact_ship_repair
				}
			}
			add_modifier = {
				modifier = "mem_artifact_ship_repair"
				days = 30
			}
		}
		fleet = {
			set_location = event_target:mem_artifact_cipher_escape
			clear_orders = yes 
		}
	}
}

#Galaxy Buster - Remote Trigger

country_event = {
	id = mem_artifact.24
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_global_flag = mem_artifact_endtime
		}
		any_owned_ship = {
			is_ship_size = mem_artifact_relic_frame
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_global_flag = mem_artifact_endtime
				}
			}
			random_system = {
				limit = {
					any_ship_in_system = {
						is_ship_size = mem_artifact_relic_frame
					}
				}
				random_system_planet = {
					limit = {
						is_star = yes
					}
					planet_event = { id = mem_artifact.9 days = 1 }
				}
			}
			every_owned_ship = {
				limit = {
					is_ship_size = mem_artifact_relic_frame
				}
				fleet = {
					destroy_fleet = THIS
				}
			}
			every_country = {
				limit = {
					NOT = {
						is_country = ROOT 
					}
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
				add_opinion_modifier = {
					modifier = opinion_doomed_us_all
					who = ROOT
				}
			}
			set_global_flag = mem_artifact_endtime
		}
	}
}

#Galaxy Buster - Relic destroyed

country_event = {
	id = mem_artifact.25
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_global_flag = mem_artifact_endtime
		}
		FROMFROMFROM = {
			is_ship_size = mem_artifact_relic_frame
		}
	}
	
	immediate = {
		FROMFROMFROM = {
			owner = {
				save_event_target_as = mem_artifact_endtime_owner
			}
		}
		if = {
			limit = {
				NOT = {
					has_global_flag = mem_artifact_endtime
				}
			}
			FROMFROM = {
				solar_system = {
					random_system_planet = {
						limit = {
							is_star = yes
						}
						planet_event = { id = mem_artifact.9 days = 1 }
					}
				}
			}
			every_country = {
				limit = {
					OR = {
						is_country_type = default
						is_country_type = fallen_empire
						is_country_type = awakened_fallen_empire
					}
				}
				add_opinion_modifier = {
					modifier = opinion_doomed_us_all
					who = event_target:mem_artifact_endtime_owner
				}
			}
			set_global_flag = mem_artifact_endtime
		}
	}
}

#Storm Terrain Effect

event = {
	id = mem_artifact.26
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_system = {
			has_star_flag = mem_gate_system_storm_debuff
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system_storm_debuff
			}
			every_fleet_in_system = {
				if = {
					limit = {
						exists = this
						NOT = {
							owner = {
								is_country_type = mem_gate_country
							}
						}
					}
					add_modifier = {
						modifier = "mem_artifact_storm_effect"
						days = 30
					}
				}
			}
		}
	}
}

country_event = {
	id = mem_artifact.27
	title = "mem_artifact.27.name"
	desc = "mem_artifact.27.desc"
	picture = GFX_evt_star_pulsar
	location = event_target:mem_artifact_relic_loc
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = mem_artifact_cipher_activation_notify
		}
	}
	
	immediate = {
		set_country_flag = mem_artifact_cipher_activation_notify
	}
	
	option = {
		name = "mem_artifact.27.a"
	}
}

#Entering System

ship_event = {
	id = mem_artifact.50
	title = "mem_artifact.50.name"
	desc = "mem_artifact.50.desc"
	picture = GFX_evt_ship_in_orbit
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
	    NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
		}
		owner = {
			NOT = {
				has_country_flag = encountered_mem_artifact 
			}
			is_ai = no
		}
		FROM = {
			has_star_flag = mem_gate_system
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = encountered_mem_artifact
		}
		every_country = {
			if = {
				limit = {
					has_event_chain = "mem_lex_gate_chain" 
				}
				end_event_chain = "mem_lex_gate_chain"
			}
		}
	}		
	
	option = {
		name = "mem_artifact.50.a"
	}
}

#Sensor Calibration

ship_event = {
	id = mem_artifact.51
	title = "mem_artifact.51.name"
	desc = "mem_artifact.51.desc"
	picture = GFX_evt_gas_giant
	location = THIS
	
	trigger = {
		NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
		}
		owner = {
			is_ai = no
			has_technology = "tech_sensors_4"
			has_country_flag = encountered_mem_artifact
			NOT = {
				has_country_flag = mem_artifact_sensor_calibrate
			}
		}
		solar_system = {
			has_star_flag = mem_gate_system
		}
	}
	
	mean_time_to_happen = {
		years = 1
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_gate_starbase
				}
				save_event_target_as = mem_gate_starbase_loc
			}
		}
		owner = {
			set_country_flag = mem_artifact_sensor_calibrate
		}
	}
	
	option = {
		name = "mem_artifact.51.a"
		event_target:mem_gate_starbase_loc = {
			enable_special_project = {
				name = "MEM_GATE_EXPLORE"
				location = THIS
				owner = ROOT
			}
		}
	}
}

#Station Explored - Choice

ship_event = {
	id = mem_artifact.52
	title = "mem_artifact.52.name"
	desc = "mem_artifact.52.desc"
	picture = GFX_evt_space_station
	location = THIS
	
	is_triggered_only = yes
	
	trigger = {
		NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
		}
		owner = {
			NOT = {
				has_country_flag = mem_artifact_station_expedition
			}
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_relic_alt_target
				}
				save_event_target_as = mem_artifact_relic_explore
			}
		}
		owner = {
			set_country_flag = mem_artifact_station_expedition
		}
	}
	
	option = {
		name = mem_artifact.52.a
		if = {
			limit = {
				NOT = {
					owner = {
						has_event_chain = "mem_artifact_cipher_chain"
					}
				}
			}
			begin_event_chain = {
			event_chain = "mem_artifact_cipher_chain"
			target = ROOT
			}
			create_point_of_interest = {
				id = mem_artifact_cipher_poi.1
				name = "mem_artifact_cipher_1_poi"
				desc = "mem_artifact_cipher_1_poi_desc"
				event_chain = mem_artifact_cipher_chain
				location = event_target:mem_cipher_1_station_loc
			}
			create_point_of_interest = {
				id = mem_artifact_cipher_poi.2
				name = "mem_artifact_cipher_2_poi"
				desc = "mem_artifact_cipher_2_poi_desc"
				event_chain = mem_artifact_cipher_chain
				location = event_target:mem_cipher_2_station_loc
			}
			create_point_of_interest = {
				id = mem_artifact_cipher_poi.3
				name = "mem_artifact_cipher_3_poi"
				desc = "mem_artifact_cipher_3_poi_desc"
				event_chain = mem_artifact_cipher_chain
				location = event_target:mem_cipher_3_station_loc
			}
		}
	}
	
	option = {
		name = mem_artifact.52.b
		event_target:mem_artifact_relic_explore = {
			enable_special_project = {
				name = "MEM_RELIC_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}
}

#Relic Forceful Access - Choice

ship_event = {
	id = mem_artifact.53
	title = "mem_artifact.53"
	desc = "mem_artifact.53.desc"
	picture = GFX_evt_physics_research
	location = THIS
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = {
				has_country_flag = mem_artifact_forceful_access_toggle
			}
		}
		NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
		}
	}
	
	immediate = {
		owner = {
			set_country_flag = mem_artifact_forceful_access_toggle
		}
	}
	
	option = {
		name = mem_artifact.53.a
		if = {
			limit = {
				NOT = {
					owner = {
						has_event_chain = "mem_artifact_cipher_chain"
					}
				}
			}
			begin_event_chain = {
			event_chain = "mem_artifact_cipher_chain"
			target = ROOT
			}
			create_point_of_interest = {
				id = mem_artifact_cipher_poi.1
				name = "mem_artifact_cipher_1_poi"
				desc = "mem_artifact_cipher_1_poi_desc"
				event_chain = mem_artifact_cipher_chain
				location = event_target:mem_cipher_1_station_loc
			}
			create_point_of_interest = {
				id = mem_artifact_cipher_poi.2
				name = "mem_artifact_cipher_2_poi"
				desc = "mem_artifact_cipher_2_poi_desc"
				event_chain = mem_artifact_cipher_chain
				location = event_target:mem_cipher_2_station_loc
			}
			create_point_of_interest = {
				id = mem_artifact_cipher_poi.3
				name = "mem_artifact_cipher_3_poi"
				desc = "mem_artifact_cipher_3_poi_desc"
				event_chain = mem_artifact_cipher_chain
				location = event_target:mem_cipher_3_station_loc
			}
		}
	}

	option = {
		name = mem_artifact.53.b
		hidden_effect = {
			random_system = {
				limit = {
					has_star_flag = mem_gate_system
				}
				every_system_ambient_object = {
					limit = {
						has_ambient_object_flag = mem_artifact_relic_alt_target
					}
					create_ambient_object = {
					type = "mem_artifact_relic_alt_2_object"
					}
					last_created_ambient_object = {
						set_location = {
							target = this
							distance = 0
							angle = 0
						}
						set_ambient_object_flag = mem_artifact_relic_alt_2_target
					}
					destroy_ambient_object = this
				}
			}
			every_country = {
				if = {
					limit = {
						has_event_chain = "mem_artifact_cipher_chain"
					}
					end_event_chain = "mem_artifact_cipher_chain"
				}
				if = {
					limit = {
						has_special_project = MEM_GATE_EXPLORE
					}
					abort_special_project = {
						type = "MEM_GATE_EXPLORE"
					}
				}
				if = {
					limit = {
						has_special_project = MEM_RELIC_ACCESS
					}
					abort_special_project = {
						type = "MEM_RELIC_ACCESS"
					}
				}
			}
			owner = {
				country_event = { id = mem_artifact.54 days = 60 }
			}
			set_global_flag = mem_artifact_awakening
		}
	}
}

#Enable Storm Clouds

country_event = {
	id = mem_artifact.54
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = mem_artifact_awakening 
		NOT = {
			has_global_flag = mem_artifact_activation
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_alt_ward_1
				}
				create_ambient_object = {
				type = "mem_artifact_station_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_alt_2_ward_1
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object= {
				limit = {
					has_ambient_object_flag = mem_artifact_alt_ward_2
				}
				create_ambient_object = {
				type = "mem_artifact_station_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_alt_2_ward_2
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_alt_ward_3
				}
				create_ambient_object = {
				type = "mem_artifact_station_alt_2_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_alt_2_ward_3
				}
				destroy_ambient_object = this
			}
			create_ambient_object = {
			type = "mem_cloud_ambient_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = event_target:mem_artifact_relic_loc
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = mem_gate_system_storm
			}
			set_star_flag = mem_gate_system_storm_debuff
		}
		country_event = { id = mem_artifact.55 days = 60 }
	}
}

#Boss Encounter Spawn

country_event = {
	id = mem_artifact.55
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = mem_artifact_awakening
		NOT = {
			has_global_flag = mem_artifact_activation
		}
	}
	
	immediate = {
		create_country = {
			name = "The Lament"
			type = mem_gate_guardian
			flag = {
				icon = {
					category = "spherical"
					file = "flag_spherical_11.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"dark_purple"
					"dark_purple"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			if = {
				limit = {
					NOT = {
						has_modifier = mem_gate_power
					}
				}
				add_modifier = {
					modifier = mem_gate_power
					days = -1
				}
			}
			if = {
				limit = {
					has_global_flag = Cipher_1_false_activation
				}
				add_modifier = {
					modifier = mem_gate_1_extra_power
					days = -1
				}
			}
			if = {
				limit = {
					has_global_flag = Cipher_2_false_activation
				}
				add_modifier = {
					modifier = mem_gate_2_extra_power
					days = -1
				}
			}
			if = {
				limit = {
					has_global_flag = Cipher_3_false_activation
				}
				add_modifier = {
					modifier = mem_gate_3_extra_power
					days = -1
				}
			}
			save_global_event_target_as = mem_gate_country
			set_country_flag = mem_gate_country
			guardian_difficulty = yes
		}
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			set_star_flag = mem_gate_snare_1
			set_star_flag = mem_gate_snare_2
			set_star_flag = mem_gate_snare_3
			every_fleet_in_system = {
				if = {
					limit = {
						exists = this
						NOT = {
							owner = {
								has_country_flag = mem_gate_country
								is_country_type = mem_gate_guardian
							}
						}
					}
					set_location = event_target:mem_artifact_relic_loc
					add_modifier = {
						modifier = "mem_artifact_fleet_snare"
						days = 360
					}
				}
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_relic_alt_2_target
				}
				mem_effect_explosion_AOE = yes
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_alt_2_ward_1
				}
				save_event_target_as = mem_artifact_alt_ward_1_loc
			}
			every_system_ambient_object= {
				limit = {
					has_ambient_object_flag = mem_artifact_alt_2_ward_2
				}
				save_event_target_as = mem_artifact_alt_ward_2_loc
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_alt_2_ward_3
				}
				save_event_target_as = mem_artifact_alt_ward_3_loc
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:mem_gate_country
					create_ship = {
						name = "An'Tu"
						design = "Var'Utr"
						prefix = no
						
						effect = {
							set_disable_at_health = 0.05	
							set_ship_flag = mem_artifact_ward_1
						}
					}
					set_location = event_target:mem_artifact_alt_ward_1_loc
				}
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:mem_gate_country
					create_ship = {
						name = "Go'Pa"
						design = "Var'Utr"
						prefix = no
						
						effect = {
							set_disable_at_health = 0.05	
							set_ship_flag = mem_artifact_ward_2
						}
					}
					set_location = event_target:mem_artifact_alt_ward_2_loc
				}
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:mem_gate_country
					create_ship = {
						name = "Pa'Ra"
						design = "Var'Utr"
						prefix = no
						
						effect = {
							set_disable_at_health = 0.05
							set_ship_flag = mem_artifact_ward_3
						}
					}
					set_location = event_target:mem_artifact_alt_ward_3_loc
				}
			}
			every_system_ambient_object = {
				limit = {
					OR = {
						has_ambient_object_flag = mem_artifact_alt_2_ward_1
						has_ambient_object_flag = mem_artifact_alt_2_ward_2
						has_ambient_object_flag = mem_artifact_alt_2_ward_3
					}
				}
				destroy_ambient_object = this
			}
		}
		every_country = {
			limit = {
				is_ai = no
			}
			if = {
				limit = {
					has_country_flag = mem_artifact_forceful_access_toggle
				}
				country_event = { id = mem_artifact.65 }
			}
			establish_communications_no_message = event_target:mem_gate_country
		}
	}
}

#Boss Encounter Snare

fleet_event = {
	id = mem_artifact.56
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			has_star_flag = mem_gate_system
			OR = {
				has_star_flag = mem_gate_snare_1
				has_star_flag = mem_gate_snare_2
				has_star_flag = mem_gate_snare_3
			}
		}
	}
	
	immediate = {
		set_location = event_target:mem_artifact_relic_loc
		add_modifier = {
			modifier = "mem_artifact_fleet_snare"
			days = 360
		}
	}
}

#Tower Destroyed - Spawn Avatar & Interrupt Snare

ship_event = {
	id = mem_artifact.57
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_ship_size = mem_artifact_station
		OWNER = {
			is_country_type = mem_gate_guardian
			has_country_flag = mem_gate_country
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_relic_alt_2_target
				}
				create_ambient_object = {
					type = mem_artifact_pulse_object
					location = this
					duration = 3
						
					use_3d_location = yes
						
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
						
					entity_scale_to_size = no
					scale = 1
				}
			}
		}
		if = {
			limit = {
				exists = this
				has_ship_flag = mem_artifact_ward_1
			}
			random_system = {
				if = {
					limit = {
						has_star_flag = mem_gate_snare_1
					}
					remove_star_flag = mem_gate_snare_1
				}
			}
			create_ambient_object = {
			type = "mem_artifact_station_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = this
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = mem_artifact_alt_ward_1_reset
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:mem_gate_country
					create_ship = {
						name = "Ai'Za"
						design = "Ru'Ha"
						prefix = no
						
						effect = {
							set_ship_flag = mem_artifact_shroudborn_1
						}
					}
					set_location = event_target:mem_artifact_relic_loc
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
			fleet = {
				delete_fleet = this
			}
			break = yes
		}
		if = {
			limit = {
				exists = this
				has_ship_flag = mem_artifact_ward_2
			}
			random_system = {
				if = {
					limit = {
						has_star_flag = mem_gate_snare_2
					}
					remove_star_flag = mem_gate_snare_2
				}
			}
			create_ambient_object = {
			type = "mem_artifact_station_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = this
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = mem_artifact_alt_ward_2_reset
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:mem_gate_country
					create_ship = {
						name = "Sau'Ra"
						design = "Ru'Ha"
						prefix = no
						
						effect = {
							set_ship_flag = mem_artifact_shroudborn_2
						}
					}
					set_location = event_target:mem_artifact_relic_loc
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
			fleet = {
				delete_fleet = this
			}
			break = yes
		}
		if = {
			limit = {
				exists = this
				has_ship_flag = mem_artifact_ward_3
			}
			random_system = {
				if = {
					limit = {
						has_star_flag = mem_gate_snare_3
					}
					remove_star_flag = mem_gate_snare_3
				}
			}
			create_ambient_object = {
			type = "mem_artifact_station_alt_object"
			}
			last_created_ambient_object = {
				set_location = {
					target = this
					distance = 0
					angle = 0
				}
				set_ambient_object_flag = mem_artifact_alt_ward_3_reset
			}
			create_fleet = {
				name = "Shroudborn"
				settings = {
					spawn_debris = no
					is_boss = yes
				}
				effect = {
					set_owner = event_target:mem_gate_country
					create_ship = {
						name = "Yaj'Jiya"
						design = "Ru'Ha"
						prefix = no
						
						effect = {
							set_ship_flag = mem_artifact_shroudborn_3
						}
					}
					set_location = event_target:mem_artifact_relic_loc
					set_fleet_stance = aggressive
					set_aggro_range = 500
					set_aggro_range_measure_from = self
				}
			}
			fleet = {
				delete_fleet = this
			}
			break = yes
		}
	}
}

#Specter defeated

country_event = {
	id = mem_artifact.60
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = mem_gate_country
		is_country_type = mem_gate_guardian
		FROMFROM = {
			is_ship_size = mem_artifact_shroudborn
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_global_flag = mem_shroudborn_1_slain
				}
				FROMFROM = {
					has_ship_flag = mem_artifact_shroudborn_1
				}
			}
			set_global_flag = mem_shroudborn_1_slain
			break = yes
		}
		if = {
			limit = {
				NOT = {
					has_global_flag = mem_shroudborn_2_slain
				}
				FROMFROM = {
					has_ship_flag = mem_artifact_shroudborn_2
				}
			}
			set_global_flag = mem_shroudborn_2_slain
			break = yes
		}
		if = {
			limit = {
				NOT = {
					has_global_flag = mem_shroudborn_3_slain
				}
				FROMFROM = {
					has_ship_flag = mem_artifact_shroudborn_3
				}
			}
			set_global_flag = mem_shroudborn_3_slain
			break = yes
		}
	}
}

#Encounter Clear Combat Path

country_event = {
	id = mem_artifact.61
	hide_window = yes
	
	fire_only_once = yes
	
	trigger = {
		AND ={
			has_global_flag = mem_shroudborn_1_slain
			has_global_flag = mem_shroudborn_2_slain
			has_global_flag = mem_shroudborn_3_slain
		}
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_relic_alt_2_target
				}
				mem_effect_explosion_AOE = yes
				create_ambient_object = {
					type = mem_artifact_pulse_object
					location = this
					duration = 3
						
					use_3d_location = yes
						
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
						
					entity_scale_to_size = no
					scale = 4
				}
				create_ambient_object = {
				type = "mem_artifact_relic_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_activated_relic
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					OR = {
						has_ambient_object_flag = mem_artifact_cipher_1_ambient
						has_ambient_object_flag = mem_artifact_cipher_2_ambient
						has_ambient_object_flag = mem_artifact_cipher_3_ambient
						has_ambient_object_flag = mem_artifact_alt_ward_1_reset
						has_ambient_object_flag = mem_artifact_alt_ward_2_reset
						has_ambient_object_flag = mem_artifact_alt_ward_3_reset
						has_ambient_object_flag = mem_artifact_relic_fog
						has_ambient_object_flag = mem_gate_system_storm
					}
				}
				destroy_ambient_object = this
			}
			every_system_planet = {
				if = {
					limit = {
						AND = {
							is_planet_class = pc_shrouded
							has_planet_flag = mem_gate_shrouded
						}
					}
					change_pc = pc_barren_cold
				}
			}
			if = {
				limit = {
					has_star_flag = mem_gate_system_storm_debuff
				}
				remove_star_flag = mem_gate_system_storm_debuff
			}
		}
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = { id = mem_artifact.63 }
		}
	}
}

#Encounter Clear Cipher Path

country_event = {
	id = mem_artifact.62
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = mem_artifact_activation
		NOT = {
			has_global_flag = mem_artifact_awakening 
		}
	}

	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			every_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_relic_alt_2_target
				}
				mem_effect_explosion_AOE = yes
				create_ambient_object = {
					type = mem_artifact_pulse_object
					location = this
					duration = 3
						
					use_3d_location = yes
						
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = 0 max = 0 }
						
					entity_scale_to_size = no
					scale = 4
				}
				create_ambient_object = {
				type = "mem_artifact_relic_object"
				}
				last_created_ambient_object = {
					set_location = {
						target = this
						distance = 0
						angle = 0
					}
					set_ambient_object_flag = mem_artifact_activated_relic
				}
				destroy_ambient_object = this
			}
			every_system_ambient_object = {
				limit = {
					OR = {
						has_ambient_object_flag = mem_artifact_cipher_1_ambient_alt
						has_ambient_object_flag = mem_artifact_cipher_2_ambient_alt
						has_ambient_object_flag = mem_artifact_cipher_3_ambient_alt
						has_ambient_object_flag = mem_artifact_relic_fog
						has_ambient_object_flag = mem_gate_system_storm
					}
				}
				destroy_ambient_object = this
			}
			every_system_planet = {
				if = {
					limit = {
						AND = {
							is_planet_class = pc_shrouded
							has_planet_flag = mem_gate_shrouded
						}
					}
					change_pc = pc_barren_cold
				}
			}
			if = {
				limit = {
					has_star_flag = mem_gate_system_storm_debuff
				}
				remove_star_flag = mem_gate_system_storm_debuff
			}
		}
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = { id = mem_artifact.63 }
		}
	}
}

#Reward Project

country_event = {
	id = mem_artifact.63
	title = "mem_artifact.63.name"
	desc = {
		text = mem_artifact.63.1.desc
		trigger = {
			has_global_flag = mem_artifact_awakening 
			NOT = {
				has_global_flag = mem_artifact_activation 
			}
		}
	}
	desc = {
		text = mem_artifact.63.2.desc
		trigger = {
			has_global_flag = mem_artifact_activation
			NOT = {
				has_global_flag = mem_artifact_awakening 
			}
		}
	}
	picture = GFX_evt_unity_symbol
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = mem_relic_unlock_notify_toggle
		}
	}
	
	immediate = {
		random_system = {
			limit = {
				has_star_flag = mem_gate_system
			}
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_artifact_activated_relic
				}
				save_event_target_as = mem_artifact_relic_final_loc
			}
		}
		set_country_flag = mem_relic_unlock_notify_toggle
		every_country = {
			limit = {
				is_ai = no
				NOT = {
					has_country_flag = mem_relic_unlock_notify_toggle
				}
			}
			country_event = { id = mem_artifact.112 days = 10 }
		}
	}
	
	option = {
		name = mem_artifact.63.1.a
		trigger = {
			has_global_flag = mem_artifact_awakening 
			NOT = {
				has_global_flag = mem_artifact_activation 
			}
		}
		event_target:mem_artifact_relic_final_loc = {
			enable_special_project = {
				name = "MEM_RELIC_TRUE_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}

	option = {
		name = mem_artifact.63.2.a
		trigger = {
			has_global_flag = mem_artifact_activation
			NOT = {
				has_global_flag = mem_artifact_awakening 
			}
		}
		event_target:mem_artifact_relic_final_loc = {
			enable_special_project = {
				name = "MEM_RELIC_TRUE_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}
}

#Reward distribution

ship_event = {
	id = mem_artifact.64
	title = "mem_artifact.64.name"
	desc = "mem_artifact.64.desc"
	picture = GFX_evt_psionics
	location = THIS
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			owner = {
				has_country_flag = mem_artifact_relic_unlock
			}
		}
	}
	
	immediate = {
		owner = {
			capital_scope = {
				save_event_target_as = mem_artifact_owner_home
			}
			save_event_target_as = mem_artifact_relic_owner
			add_threat = {
				who = owner 
				amount = 5
			}
			set_country_flag = mem_artifact_relic_unlock
		}
	}
	
	option = {
		name = "mem_artifact.64.a"
		if = {
			limit = {
				OR = {
					has_global_flag = mem_artifact_activation
					owner = {
						has_global_flag = mem_artifact_forceful_access_toggle
					}
				}
			}
			create_fleet = {
				name = "The Cipher"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
				effect = {
					set_owner = event_target:mem_artifact_relic_owner
					create_ship = {
						name = "Ra'Mi"
						design = "Amb'Ara II"
						prefix = no
						
						effect = {
							set_ship_flag = mem_artifact_cipher_4
						}
					}
					set_location = {
						target = event_target:mem_artifact_relic_loc
						distance = 0
						angle = 0
					}
				}
			}
		}
		create_fleet = {
			name = "The Relic"
			settings = {
				spawn_debris = no 
				is_boss = yes
			}
			effect = {
				set_owner = event_target:mem_artifact_relic_owner
				create_ship = {
					name = "Am'Rta"
					design = "Dai'Vata"
					prefix = no
				}
				set_location = {
					target = event_target:mem_artifact_relic_loc
					distance = 0
					angle = 0
				}
			}
		}
		enable_special_project = {
			name = "MEM_ARTIFACT_TRIGGER"
			location = event_target:mem_artifact_owner_home
			owner = ROOT
		}	
		hidden_effect = {
			owner = {
				set_country_flag = mem_artifact_tech_target
			}
			random_system = {
				limit = {
					has_star_flag = mem_gate_system
				}
				random_system_ambient_object = {
					limit = {
						has_ambient_object_flag = mem_artifact_activated_relic
					}
					destroy_ambient_object = this
				}
			}
		}
	}
}

#Combat Encounter Notify

country_event = {
	id = mem_artifact.65
	title = "mem_artifact.65.name"
	desc = "mem_artifact.65.desc"
	picture = GFX_evt_unspeakable_horror
	location = event_target:mem_artifact_relic_loc
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = mem_artifact_relic_defense_notify
		}
	}
	
	immediate = {
		set_country_flag = mem_artifact_relic_defense_notify
	}

	
	option = {
		name = "mem_artifact.65.a"
	}
}

#Enter Cipher 1 System - Shield unlock

ship_event = {
	id = mem_artifact.100
	title = "mem_artifact.100.name"
	desc = "mem_artifact.100.desc"
	picture = GFX_evt_space_station
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
	    NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
		}
		owner = {
			NOT = {
				has_country_flag = encountered_mem_cipher_1_system
			}
			is_ai = no
			has_country_flag = mem_artifact_station_expedition
		}
		FROM = {
			has_star_flag = mem_cipher_1_system
		}
	}
	
	immediate = {
		owner = {
			if = {
				limit = {
					has_event_chain = "mem_artifact_cipher_chain"
				}
				remove_point_of_interest = mem_artifact_cipher_poi.1
			}
			set_country_flag = encountered_mem_cipher_1_system
		}
	}		
	
	option = {
		name = "mem_artifact.100.a"
		hidden_effect = {
			event_target:mem_cipher_1_station_loc = {
				mem_effect_explosion_small_2 = yes
				create_ambient_object = {
					type = "mem_starbase_object"
					location = THIS
				}
				last_created_ambient_object = {
					set_ambient_object_flag = mem_cipher_1_station
					save_event_target_as = mem_cipher_1_station_project
				}
				destroy_ambient_object = this
			}
		}
		event_target:mem_cipher_1_station_project = {
			enable_special_project = {
				name = "MEM_CIPHER_1_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}
}

#Enter Cipher 2 System - Shield unlock

ship_event = {
	id = mem_artifact.101
	title = "mem_artifact.101.name"
	desc = "mem_artifact.101.desc"
	picture = GFX_evt_space_station
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
	    NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
		}
		owner = {
			NOT = {
				has_country_flag = encountered_mem_cipher_2_system
			}
			is_ai = no
			has_country_flag = mem_artifact_station_expedition
		}
		FROM = {
			has_star_flag = mem_cipher_2_system
		}
	}
	
	immediate = {
		owner = {
			if = {
				limit = {
					has_event_chain = "mem_artifact_cipher_chain"
				}
				remove_point_of_interest = mem_artifact_cipher_poi.2
			}
			set_country_flag = encountered_mem_cipher_2_system
		}
	}		
	
	option = {
		name = "mem_artifact.101.a"
		hidden_effect = {
			event_target:mem_cipher_2_station_loc = {
				mem_effect_explosion_small_2 = yes
				create_ambient_object = {
					type = "mem_starbase_object"
					location = THIS
				}
				last_created_ambient_object = {
					set_ambient_object_flag = mem_cipher_2_station
					save_event_target_as = mem_cipher_2_station_project
				}
				destroy_ambient_object = this
			}
		}
		event_target:mem_cipher_2_station_project = {
			enable_special_project = {
				name = "MEM_CIPHER_2_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}
}

#Enter Cipher 3 System - Shield unlock

ship_event = {
	id = mem_artifact.102
	title = "mem_artifact.102.name"
	desc = "mem_artifact.102.desc"
	picture = GFX_evt_space_station
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
	    NOR = {
			has_global_flag = mem_artifact_activation
			has_global_flag = mem_artifact_awakening 
		}
		owner = {
			NOT = {
				has_country_flag = encountered_mem_cipher_3_system
			}
			is_ai = no
			has_country_flag = mem_artifact_station_expedition
		}
		FROM = {
			has_star_flag = mem_cipher_3_system
		}
	}
	
	immediate = {
		owner = {
			if = {
				limit = {
					has_event_chain = "mem_artifact_cipher_chain"
				}
				remove_point_of_interest = mem_artifact_cipher_poi.3
			}
			set_country_flag = encountered_mem_cipher_3_system
		}
	}		
	
	option = {
		name = "mem_artifact.102.a"
		hidden_effect = {
			event_target:mem_cipher_3_station_loc = {
				mem_effect_explosion_small_2 = yes
				create_ambient_object = {
					type = "mem_starbase_object"
					location = THIS
				}
				last_created_ambient_object = {
					set_ambient_object_flag = mem_cipher_3_station
					save_event_target_as = mem_cipher_3_station_project
				}
				destroy_ambient_object = this
			}
		}
		event_target:mem_cipher_3_station_project = {
			enable_special_project = {
				name = "MEM_CIPHER_3_ACCESS"
				location = this
				owner = ROOT
			}
		}
	}
}

#Enter Cipher 1 System - Shield locked

ship_event = {
	id = mem_artifact.103
	title = "mem_artifact.103.name"
	desc = "mem_artifact.103.desc"
	picture = GFX_evt_unknown_ships
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = {
				has_country_flag = encountered_mem_cipher_1_locked_system
				has_country_flag = encountered_mem_cipher_1_system
				has_country_flag = mem_artifact_station_expedition
				has_event_chain = "mem_artifact_cipher_chain"
			}
			is_ai = no
		}
		FROM = {
			has_star_flag = mem_cipher_1_system
		}
	}
	
	immediate = {
		save_event_target_as = mem_artifact_cipher_1_locked_ship_name
		from = {
			save_event_target_as = mem_artifact_cipher_1_locked_system_name
		}
		owner = {
			set_country_flag = encountered_mem_cipher_1_locked_system
		}
	}		
	
	option = {
		name = "mem_artifact.103.a"
	}
}

#Enter Cipher 2 System - Shield locked

ship_event = {
	id = mem_artifact.104
	title = "mem_artifact.104.name"
	desc = "mem_artifact.104.desc"
	picture = GFX_evt_unknown_ships
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = {
				has_country_flag = encountered_mem_cipher_2_locked_system
				has_country_flag = encountered_mem_cipher_2_system
				has_country_flag = mem_artifact_station_expedition
				has_event_chain = "mem_artifact_cipher_chain"
			}
			is_ai = no
		}
		FROM = {
			has_star_flag = mem_cipher_2_system
		}
	}
	
	immediate = {
		save_event_target_as = mem_artifact_cipher_2_locked_ship_name
		from = {
			save_event_target_as = mem_artifact_cipher_2_locked_system_name
		}
		owner = {
			set_country_flag = encountered_mem_cipher_2_locked_system
		}
	}		
	
	option = {
		name = "mem_artifact.104.a"
	}
}

#Enter Cipher 3 System - Shield locked

ship_event = {
	id = mem_artifact.105
	title = "mem_artifact.105.name"
	desc = "mem_artifact.105.desc"
	picture = GFX_evt_unknown_ships
	location = FROM
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = {
				has_country_flag = encountered_mem_cipher_3_locked_system
				has_country_flag = encountered_mem_cipher_3_system
				has_country_flag = mem_artifact_station_expedition
				has_event_chain = "mem_artifact_cipher_chain"
			}
			is_ai = no
		}
		FROM = {
			has_star_flag = mem_cipher_3_system
		}
	}
	
	immediate = {
		save_event_target_as = mem_artifact_cipher_3_locked_ship_name
		from = {
			save_event_target_as = mem_artifact_cipher_3_locked_system_name
		}
		owner = {
			set_country_flag = encountered_mem_cipher_3_locked_system
		}
	}		
	
	option = {
		name = "mem_artifact.105.a"
	}
}

#Cipher 1 Reward

ship_event = {
	id = mem_artifact.106
	title = "mem_artifact.106.name"
	desc = "mem_artifact.106.desc"
	picture = GFX_evt_satellite_in_orbit
	
	is_triggered_only = yes

	trigger = {
		owner = {
			has_country_flag = encountered_mem_cipher_1_system
			NOT = {
				has_country_flag = mem_cipher_1_system_unlock
			}
		}
	}
	
	immediate = {
		this = {
			save_event_target_as = mem_artifact_cipher_1_loc
			owner = {
				save_event_target_as = mem_artifact_cipher_1_owner
				set_country_flag = mem_cipher_1_system_unlock
			}
		}
	}
	
	option = {
		name = "mem_artifact.106.a"
		hidden_effect = {
			owner = {
				if = {
					limit = {
						has_event_chain = "mem_artifact_cipher_chain"
					}
					add_event_chain_counter = { 
						event_chain = "mem_artifact_cipher_chain" 
						counter = "mem_artifact_cipher_counter" 
						amount = 1 
					}
				}
			}
		}
		create_fleet = {
			name = "1st Cipher"
			settings = {
				spawn_debris = no 
				is_boss = yes
			}
			effect = {
				set_owner = event_target:mem_artifact_cipher_1_owner
				create_ship = {
					name = "Ti'Mira"
					design = "Amb'Ara I"
					prefix = no
					
					effect = {
						set_disable_at_health = 0.05
						set_ship_flag = mem_artifact_cipher_1_locked
					}
				}
				set_location = {
					target = event_target:mem_artifact_cipher_1_loc
					distance = 5
					angle = random
				}
			}
		}
	}
}

#Cipher 2 Reward

ship_event = {
	id = mem_artifact.107
	title = "mem_artifact.107.name"
	desc = "mem_artifact.107.desc"
	picture = GFX_evt_satellite_in_orbit
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			has_country_flag = encountered_mem_cipher_2_system
			NOT = {
				has_country_flag = mem_cipher_2_system_unlock
			}
		}
	}
	
	immediate = {
		this = {
			save_event_target_as = mem_artifact_cipher_2_loc
			owner = {
				save_event_target_as = mem_artifact_cipher_2_owner
				set_country_flag = mem_cipher_2_system_unlock
			}
		}
	}
	
	option = {
		name = "mem_artifact.107.a"
		hidden_effect = {
			owner = {
				if = {
					limit = {
						has_event_chain = "mem_artifact_cipher_chain"
					}
					add_event_chain_counter = { 
						event_chain = "mem_artifact_cipher_chain" 
						counter = "mem_artifact_cipher_counter" 
						amount = 1 
					}
				}
			}
		}
		create_fleet = {
			name = "2nd Cipher"
			settings = {
				spawn_debris = no 
				is_boss = yes
			}
			effect = {
				set_owner = event_target:mem_artifact_cipher_2_owner
				create_ship = {
					name = "Ak'tu"
					design = "Amb'Ara I"
					prefix = no
					
					effect = {
						set_disable_at_health = 0.05
						set_ship_flag = mem_artifact_cipher_2_locked
					}
				}
				set_location = {
					target = event_target:mem_artifact_cipher_2_loc
					distance = 5
					angle = random 
				}
			}
		}
	}
}

#Cipher 3 Reward

ship_event = {
	id = mem_artifact.108
	title = "mem_artifact.108.name"
	desc = "mem_artifact.108.desc"
	picture = GFX_evt_satellite_in_orbit
	
	is_triggered_only = yes
	
	trigger = {
		owner = {
			has_country_flag = encountered_mem_cipher_3_system
			NOT = {
				has_country_flag = mem_cipher_3_system_unlock
			}
		}
	}
	
	immediate = {
		this = {
			save_event_target_as = mem_artifact_cipher_3_loc
			owner = {
				save_event_target_as = mem_artifact_cipher_3_owner
				set_country_flag = mem_cipher_3_system_unlock
			}
		}
	}
	
	option = {
		name = "mem_artifact.108.a"
		hidden_effect = {
			owner = {
				if = {
					limit = {
						has_event_chain = "mem_artifact_cipher_chain"
					}
					add_event_chain_counter = { 
						event_chain = "mem_artifact_cipher_chain" 
						counter = "mem_artifact_cipher_counter" 
						amount = 1 
					}
				}
			}
		}
		create_fleet = {
			name = "3rd Cipher"
			settings = {
				spawn_debris = no 
				is_boss = yes
			}
			effect = {
				set_owner = event_target:mem_artifact_cipher_3_owner
				create_ship = {
					name = "Ak'tu"
					design = "Amb'Ara I"
					prefix = no
					
					effect = {
						set_disable_at_health = 0.05
						set_ship_flag = mem_artifact_cipher_3_locked
					}
				}
				set_location = {
					target = event_target:mem_artifact_cipher_3_loc
					distance = 5
					angle = random
				}
			}
		}
	}
}

#Cipher 1 Upgrade

country_event = {
	id = mem_artifact.109
	title = "mem_artifact.109.name"
	desc = "mem_artifact.109.desc"
	picture = GFX_evt_physics_research
	
	fire_only_once = yes
	
	trigger = {
		is_ai = no
		AND = {
			has_technology = "tech_sentient_ai"
			has_technology = "tech_physics_lab_3"
		}
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = mem_artifact_cipher_1
					is_ship_size = mem_artifact_cipher
				}
			}	
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = mem_artifact_cipher_1_locked
				is_ship_size = mem_artifact_cipher
			}
		}	
	}
	
	mean_time_to_happen = {
		years = 5
	}
	
	option = {
		name = "mem_artifact.109.a"
		hidden_effect = {
			every_owned_ship = {
				limit = {
					AND = {
						is_ship_size = mem_artifact_cipher
						has_ship_flag = mem_artifact_cipher_1_locked
					}
				}
				remove_ship_flag = mem_artifact_cipher_1_locked
				set_ship_flag = mem_artifact_cipher_1
			}
		}
	}
}

#Cipher 2 Upgrade

country_event = {
	id = mem_artifact.110
	title = "mem_artifact.110.name"
	desc = "mem_artifact.110.desc"
	picture = GFX_evt_physics_research
	
	fire_only_once = yes
	
	trigger = {
		is_ai = no
		AND = {
			has_technology = "tech_sentient_ai"
			has_technology = "tech_biolab_3"
		}
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = mem_artifact_cipher_2
					is_ship_size = mem_artifact_cipher
				}
			}	
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = mem_artifact_cipher_2_locked
				is_ship_size = mem_artifact_cipher
			}
		}	
	}
	
	mean_time_to_happen = {
		years = 5
	}
	
	option = {
		name = "mem_artifact.110.a"
		hidden_effect = {
			every_owned_ship = {
				limit = {
					AND = {
						is_ship_size = mem_artifact_cipher
						has_ship_flag = mem_artifact_cipher_2_locked
					}
				}
				remove_ship_flag = mem_artifact_cipher_2_locked
				set_ship_flag = mem_artifact_cipher_2
			}
		}
	}
}

#Cipher 3 Upgrade

country_event = {
	id = mem_artifact.111
	title = "mem_artifact.111.name"
	desc = "mem_artifact.111.desc"
	picture = GFX_evt_physics_research
	
	fire_only_once = yes
	
	trigger = {
		is_ai = no
		AND = {
			has_technology = "tech_sentient_ai"
			has_technology = "tech_engineering_lab_3"
		}
		NOT = {
			any_owned_ship = {
				AND = {
					has_ship_flag = mem_artifact_cipher_3
					is_ship_size = mem_artifact_cipher
				}
			}	
		}
		any_owned_ship = {
			AND = {
				has_ship_flag = mem_artifact_cipher_3_locked
				is_ship_size = mem_artifact_cipher
			}
		}	
	}
	
	mean_time_to_happen = {
		years = 5
	}
	
	option = {
		name = "mem_artifact.111.a"
		hidden_effect = {
			every_owned_ship = {
				limit = {
					AND = {
						is_ship_size = mem_artifact_cipher
						has_ship_flag = mem_artifact_cipher_3_locked
					}
				}
				remove_ship_flag = mem_artifact_cipher_3_locked
				set_ship_flag = mem_artifact_cipher_3
			}
		}
	}
}

#Event Clear - Global notify

country_event = {
	id = mem_artifact.112
	title = "mem_artifact.112.name"
	desc = "mem_artifact.112.desc"
	picture = GFX_evt_unity_symbol
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_flag = mem_artifact_global_notify
		}
	}
	
	immediate = {
		set_country_flag = mem_artifact_global_notify
	}
	
	option = {
		name = "mem_artifact.112.a"
	}
}

#Technology Unlock

country_event = {
	id = mem_artifact.200
	title = "mem_artifact.200.name"
	desc = "mem_artifact.200.desc"
	picture = GFX_evt_genetic_modification

	fire_only_once = yes
	
	trigger = {
		NOT = {
			has_country_flag = mem_artifact_tech_unlock
		}
		is_ai = no
		has_country_flag = mem_artifact_tech_target
		has_technology = "tech_mine_zro"
	}
	
	mean_time_to_happen = {
		years = 3
	}
	
	immediate = {
		set_country_flag = mem_artifact_tech_unlock
	}
	
	option = {
		name = "mem_artifact.200.a"
		if = {
			limit = {
				NOT = {
					has_technology = "tech_mem_artifact"
				}
			}
			add_research_option = tech_mem_artifact
			add_tech_progress = {
				tech = tech_mem_artifact
				progress = 0.1
			}
		}
	}
}

#Weakness Research Init

country_event = {
	id = mem_artifact.300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = mem_gate_guardian
		from = {
			NOT = {
				has_country_flag = mem_artifact_weakness_check
			}
			is_ai = no
	
			AND = {
				OR = {
					has_technology = "tech_ship_armor_5"
					has_technology = "tech_dragon_armor"
				}
				OR = {
					has_technology = "tech_shields_5"
					has_technology = "tech_psionic_shield"
					has_technology = "tech_enigmatic_deflector"
				}		
				OR = {
					has_technology = "tech_zero_point_power"
					has_technology = "tech_enigmatic_power_core"
				}
				OR = {
					has_technology = "tech_energy_lance_2"
					has_technology = "tech_arc_emitter_2"
					has_technology = "tech_mass_accelerator_2"
				}
			}
		}
	}

	immediate = {
		random_list = {
			50 = {
				if = {
					limit = {
						check_variable = {
							which = "mem_artifact_kill_counter"
							value < 1
						}
					}
					set_variable = {
						which = "mem_artifact_kill_counter"
						value = 1
					}
					else = {
						change_variable = {
							which = "mem_artifact_kill_counter"
							value = 1
						}
						if = {
							limit = {
								AND = {
									check_variable = {
										which = "mem_artifact_kill_counter"
										value = 3
									}
								}
							}
							from = {
								set_country_flag = mem_artifact_weakness_check
								country_event = { id = mem_artifact.301 days = 30 }
							}
						}
					}
				}
			}
			50 = {
			}
		}
	}
}

#Weakness Research Project

country_event = {
	id = mem_artifact.301
	title = "mem_artifact.301.name"
	desc = "mem_artifact.301.desc"
	picture = GFX_evt_exploding_ship
	is_triggered_only = yes

	trigger = {
		NOT = {
			any_country = {
				has_country_flag = mem_artifact_relic_unlock
			}
			has_country_flag = mem_artifact_weakness_researched 
		}
	}

	option = {
		name = mem_artifact.301.a
		allow = {
			hidden_trigger = {
				NOT = { has_modifier = mem_gate_weakness }
			}
		}
		hidden_effect = { set_country_flag = mem_artifact_weakness_researched  }
		capital_scope = { save_event_target_as = mem_pc_home }
		enable_special_project = {
			name = "MEM_ARTIFACT_WEAKNESS_PROJECT"
			location = event_target:mem_pc_home
			owner = ROOT
		}
	}	
	option = {
		name = mem_artifact.301.b
		add_influence = 100
	}
}

#Weakness research project complete

country_event = {
	id = mem_artifact.302
	title = "mem_artifact.302.name"
	desc = "mem_artifact.302.desc"
	picture = GFX_evt_physics_research
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_modifier = mem_gate_weakness
		}
	}

	option = {
		name = mem_artifact.302.a
		add_modifier = {
			modifier = mem_gate_weakness
			days = -1
		}
	}
}

#Enraged Shroud Spirit

planet_event = {
	id = mem_artifact.400
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		this = {
			save_event_target_as = mem_artifact_shroud_escape_loc
		}
		if = {
			limit = {
				NOT = {
					exists = event_target:mem_shroud_country
				} 
			}
			create_country = {
				name = "NAME_Creatures_of_the_Shroud"
				type = mem_shroud_guardian
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"dark_purple"
						"black"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				save_global_event_target_as = mem_shroud_country
			}
			every_country = {
				if = {
					limit = {
						NOT = {
							has_communications = event_target:mem_shroud_country
						}
					}
					establish_communications_no_message = event_target:mem_shroud_country
				}
			}
		}
		create_fleet = {
			name = "Shroudborn"
			settings = {
				spawn_debris = no
				is_boss = yes
			}			
			effect = {
				set_owner = event_target:mem_shroud_country
				create_ship = {
					name = "Un'Mada"
					design = "Ru'Ha"
				}
				set_location = event_target:mem_artifact_shroud_escape_loc
				set_fleet_stance = aggressive
				set_aggro_range = 500
				set_aggro_range_measure_from = self
				
				fleet_event = { id = mem_artifact.2 days = 3600 }
			}
		}
	}
}
